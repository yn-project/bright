// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.18.1
// source: bright/datafin/datafin.proto

package datafin

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	bright "yun.tea/block/bright/proto/bright"
	_ "yun.tea/block/bright/proto/bright/basetype"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	DataType_RawType  DataType = 0
	DataType_JsonType DataType = 20
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0:  "RawType",
		20: "JsonType",
	}
	DataType_value = map[string]int32{
		"RawType":  0,
		"JsonType": 20,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_bright_datafin_datafin_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_bright_datafin_datafin_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{0}
}

type DataFinState int32

const (
	DataFinState_DataFinStateDefault    DataFinState = 0
	DataFinState_DataFinStateOnQueue    DataFinState = 10
	DataFinState_DataFinStateProcessing DataFinState = 20
	DataFinState_DataFinStateSeccess    DataFinState = 30
	DataFinState_DataFinStateFailed     DataFinState = 40
)

// Enum value maps for DataFinState.
var (
	DataFinState_name = map[int32]string{
		0:  "DataFinStateDefault",
		10: "DataFinStateOnQueue",
		20: "DataFinStateProcessing",
		30: "DataFinStateSeccess",
		40: "DataFinStateFailed",
	}
	DataFinState_value = map[string]int32{
		"DataFinStateDefault":    0,
		"DataFinStateOnQueue":    10,
		"DataFinStateProcessing": 20,
		"DataFinStateSeccess":    30,
		"DataFinStateFailed":     40,
	}
)

func (x DataFinState) Enum() *DataFinState {
	p := new(DataFinState)
	*p = x
	return p
}

func (x DataFinState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataFinState) Descriptor() protoreflect.EnumDescriptor {
	return file_bright_datafin_datafin_proto_enumTypes[1].Descriptor()
}

func (DataFinState) Type() protoreflect.EnumType {
	return &file_bright_datafin_datafin_proto_enumTypes[1]
}

func (x DataFinState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataFinState.Descriptor instead.
func (DataFinState) EnumDescriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{1}
}

type DataFinReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID    *string       `protobuf:"bytes,10,opt,name=DataID,json=dataID,proto3,oneof" json:"DataID,omitempty"`
	DataFinID *string       `protobuf:"bytes,20,opt,name=DataFinID,json=dataFinID,proto3,oneof" json:"DataFinID,omitempty"`
	TopicID   *string       `protobuf:"bytes,30,opt,name=TopicID,json=topicID,proto3,oneof" json:"TopicID,omitempty"`
	DataFin   *string       `protobuf:"bytes,40,opt,name=DataFin,json=dataFin,proto3,oneof" json:"DataFin,omitempty"`
	TxTime    *uint32       `protobuf:"varint,50,opt,name=TxTime,json=txTime,proto3,oneof" json:"TxTime,omitempty"`
	TxHash    *string       `protobuf:"bytes,60,opt,name=TxHash,json=txHash,proto3,oneof" json:"TxHash,omitempty"`
	Retries   *uint32       `protobuf:"varint,80,opt,name=Retries,json=retries,proto3,oneof" json:"Retries,omitempty"`
	State     *DataFinState `protobuf:"varint,90,opt,name=State,json=state,proto3,enum=bright.datafin.DataFinState,oneof" json:"State,omitempty"`
	Remark    *string       `protobuf:"bytes,100,opt,name=Remark,json=remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *DataFinReq) Reset() {
	*x = DataFinReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFinReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFinReq) ProtoMessage() {}

func (x *DataFinReq) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFinReq.ProtoReflect.Descriptor instead.
func (*DataFinReq) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{0}
}

func (x *DataFinReq) GetDataID() string {
	if x != nil && x.DataID != nil {
		return *x.DataID
	}
	return ""
}

func (x *DataFinReq) GetDataFinID() string {
	if x != nil && x.DataFinID != nil {
		return *x.DataFinID
	}
	return ""
}

func (x *DataFinReq) GetTopicID() string {
	if x != nil && x.TopicID != nil {
		return *x.TopicID
	}
	return ""
}

func (x *DataFinReq) GetDataFin() string {
	if x != nil && x.DataFin != nil {
		return *x.DataFin
	}
	return ""
}

func (x *DataFinReq) GetTxTime() uint32 {
	if x != nil && x.TxTime != nil {
		return *x.TxTime
	}
	return 0
}

func (x *DataFinReq) GetTxHash() string {
	if x != nil && x.TxHash != nil {
		return *x.TxHash
	}
	return ""
}

func (x *DataFinReq) GetRetries() uint32 {
	if x != nil && x.Retries != nil {
		return *x.Retries
	}
	return 0
}

func (x *DataFinReq) GetState() DataFinState {
	if x != nil && x.State != nil {
		return *x.State
	}
	return DataFinState_DataFinStateDefault
}

func (x *DataFinReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type Conds struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID    *bright.StringVal      `protobuf:"bytes,10,opt,name=DataID,proto3" json:"DataID,omitempty"`
	DataFinID *bright.StringVal      `protobuf:"bytes,20,opt,name=DataFinID,proto3" json:"DataFinID,omitempty"`
	TopicID   *bright.StringVal      `protobuf:"bytes,30,opt,name=TopicID,proto3" json:"TopicID,omitempty"`
	DataFin   *bright.StringVal      `protobuf:"bytes,40,opt,name=DataFin,proto3" json:"DataFin,omitempty"`
	TxTime    *bright.Uint32Val      `protobuf:"bytes,50,opt,name=TxTime,proto3" json:"TxTime,omitempty"`
	TxHash    *bright.StringVal      `protobuf:"bytes,60,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	Retries   *bright.Uint32Val      `protobuf:"bytes,80,opt,name=Retries,proto3" json:"Retries,omitempty"`
	State     *bright.StringVal      `protobuf:"bytes,90,opt,name=State,proto3" json:"State,omitempty"`
	IDs       *bright.StringSliceVal `protobuf:"bytes,100,opt,name=IDs,proto3" json:"IDs,omitempty"`
}

func (x *Conds) Reset() {
	*x = Conds{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conds) ProtoMessage() {}

func (x *Conds) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conds.ProtoReflect.Descriptor instead.
func (*Conds) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{1}
}

func (x *Conds) GetDataID() *bright.StringVal {
	if x != nil {
		return x.DataID
	}
	return nil
}

func (x *Conds) GetDataFinID() *bright.StringVal {
	if x != nil {
		return x.DataFinID
	}
	return nil
}

func (x *Conds) GetTopicID() *bright.StringVal {
	if x != nil {
		return x.TopicID
	}
	return nil
}

func (x *Conds) GetDataFin() *bright.StringVal {
	if x != nil {
		return x.DataFin
	}
	return nil
}

func (x *Conds) GetTxTime() *bright.Uint32Val {
	if x != nil {
		return x.TxTime
	}
	return nil
}

func (x *Conds) GetTxHash() *bright.StringVal {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *Conds) GetRetries() *bright.Uint32Val {
	if x != nil {
		return x.Retries
	}
	return nil
}

func (x *Conds) GetState() *bright.StringVal {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *Conds) GetIDs() *bright.StringSliceVal {
	if x != nil {
		return x.IDs
	}
	return nil
}

type CreateDataFinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string         `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Type    DataType       `protobuf:"varint,20,opt,name=Type,json=type,proto3,enum=bright.datafin.DataType" json:"Type,omitempty"`
	Infos   []*DataItemReq `protobuf:"bytes,30,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateDataFinRequest) Reset() {
	*x = CreateDataFinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataFinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataFinRequest) ProtoMessage() {}

func (x *CreateDataFinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataFinRequest.ProtoReflect.Descriptor instead.
func (*CreateDataFinRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDataFinRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CreateDataFinRequest) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_RawType
}

func (x *CreateDataFinRequest) GetInfos() []*DataItemReq {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CreateDataFinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DataFinInfo `protobuf:"bytes,10,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *CreateDataFinResponse) Reset() {
	*x = CreateDataFinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDataFinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDataFinResponse) ProtoMessage() {}

func (x *CreateDataFinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDataFinResponse.ProtoReflect.Descriptor instead.
func (*CreateDataFinResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDataFinResponse) GetInfos() []*DataFinInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

type DataItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID string `protobuf:"bytes,10,opt,name=DataID,json=dataID,proto3" json:"DataID,omitempty"`
	Data   string `protobuf:"bytes,20,opt,name=Data,json=data,proto3" json:"Data,omitempty"`
}

func (x *DataItemReq) Reset() {
	*x = DataItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataItemReq) ProtoMessage() {}

func (x *DataItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataItemReq.ProtoReflect.Descriptor instead.
func (*DataItemReq) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{4}
}

func (x *DataItemReq) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *DataItemReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type DataFinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID    string       `protobuf:"bytes,10,opt,name=DataID,json=dataID,proto3" json:"DataID,omitempty"`
	DataFinID string       `protobuf:"bytes,20,opt,name=DataFinID,json=dataFinID,proto3" json:"DataFinID,omitempty"`
	TopicID   string       `protobuf:"bytes,30,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	DataFin   string       `protobuf:"bytes,40,opt,name=DataFin,json=dataFin,proto3" json:"DataFin,omitempty"`
	TxTime    uint32       `protobuf:"varint,50,opt,name=TxTime,json=txTime,proto3" json:"TxTime,omitempty"`
	TxHash    string       `protobuf:"bytes,60,opt,name=TxHash,json=txHash,proto3" json:"TxHash,omitempty"`
	State     DataFinState `protobuf:"varint,80,opt,name=State,json=state,proto3,enum=bright.datafin.DataFinState" json:"State,omitempty"`
	Retries   uint32       `protobuf:"varint,90,opt,name=Retries,json=retries,proto3" json:"Retries,omitempty"`
	Remark    string       `protobuf:"bytes,100,opt,name=Remark,json=remark,proto3" json:"Remark,omitempty"`
	CreatedAt uint32       `protobuf:"varint,110,opt,name=CreatedAt,json=createdAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt uint32       `protobuf:"varint,120,opt,name=UpdatedAt,json=updatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *DataFinInfo) Reset() {
	*x = DataFinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataFinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataFinInfo) ProtoMessage() {}

func (x *DataFinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataFinInfo.ProtoReflect.Descriptor instead.
func (*DataFinInfo) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{5}
}

func (x *DataFinInfo) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *DataFinInfo) GetDataFinID() string {
	if x != nil {
		return x.DataFinID
	}
	return ""
}

func (x *DataFinInfo) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *DataFinInfo) GetDataFin() string {
	if x != nil {
		return x.DataFin
	}
	return ""
}

func (x *DataFinInfo) GetTxTime() uint32 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *DataFinInfo) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *DataFinInfo) GetState() DataFinState {
	if x != nil {
		return x.State
	}
	return DataFinState_DataFinStateDefault
}

func (x *DataFinInfo) GetRetries() uint32 {
	if x != nil {
		return x.Retries
	}
	return 0
}

func (x *DataFinInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *DataFinInfo) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *DataFinInfo) GetUpdatedAt() uint32 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetDataFinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID    string   `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	DataFinIDs []string `protobuf:"bytes,20,rep,name=DataFinIDs,json=dataFinIDs,proto3" json:"DataFinIDs,omitempty"`
}

func (x *GetDataFinsRequest) Reset() {
	*x = GetDataFinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataFinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataFinsRequest) ProtoMessage() {}

func (x *GetDataFinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataFinsRequest.ProtoReflect.Descriptor instead.
func (*GetDataFinsRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{6}
}

func (x *GetDataFinsRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *GetDataFinsRequest) GetDataFinIDs() []string {
	if x != nil {
		return x.DataFinIDs
	}
	return nil
}

type GetDataFinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DataFinInfo `protobuf:"bytes,10,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
	Total uint32         `protobuf:"varint,20,opt,name=Total,json=total,proto3" json:"Total,omitempty"`
}

func (x *GetDataFinsResponse) Reset() {
	*x = GetDataFinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDataFinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDataFinsResponse) ProtoMessage() {}

func (x *GetDataFinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDataFinsResponse.ProtoReflect.Descriptor instead.
func (*GetDataFinsResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{7}
}

func (x *GetDataFinsResponse) GetInfos() []*DataFinInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetDataFinsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAllDataFinsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,10,opt,name=Offset,json=offset,proto3" json:"Offset,omitempty"`
	Limit  uint32 `protobuf:"varint,20,opt,name=Limit,json=limit,proto3" json:"Limit,omitempty"`
	Desc   bool   `protobuf:"varint,30,opt,name=Desc,json=desc,proto3" json:"Desc,omitempty"`
}

func (x *GetAllDataFinsRequest) Reset() {
	*x = GetAllDataFinsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDataFinsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDataFinsRequest) ProtoMessage() {}

func (x *GetAllDataFinsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDataFinsRequest.ProtoReflect.Descriptor instead.
func (*GetAllDataFinsRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllDataFinsRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetAllDataFinsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetAllDataFinsRequest) GetDesc() bool {
	if x != nil {
		return x.Desc
	}
	return false
}

type GetAllDataFinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Infos []*DataFinInfo `protobuf:"bytes,10,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
	Total uint32         `protobuf:"varint,20,opt,name=Total,json=total,proto3" json:"Total,omitempty"`
}

func (x *GetAllDataFinsResponse) Reset() {
	*x = GetAllDataFinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllDataFinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllDataFinsResponse) ProtoMessage() {}

func (x *GetAllDataFinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllDataFinsResponse.ProtoReflect.Descriptor instead.
func (*GetAllDataFinsResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{9}
}

func (x *GetAllDataFinsResponse) GetInfos() []*DataFinInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

func (x *GetAllDataFinsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type CheckIDDataFinItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID  string  `protobuf:"bytes,10,opt,name=DataID,json=dataID,proto3" json:"DataID,omitempty"`
	DataFin *string `protobuf:"bytes,20,opt,name=DataFin,json=dataFin,proto3,oneof" json:"DataFin,omitempty"`
}

func (x *CheckIDDataFinItem) Reset() {
	*x = CheckIDDataFinItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIDDataFinItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIDDataFinItem) ProtoMessage() {}

func (x *CheckIDDataFinItem) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIDDataFinItem.ProtoReflect.Descriptor instead.
func (*CheckIDDataFinItem) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{10}
}

func (x *CheckIDDataFinItem) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *CheckIDDataFinItem) GetDataFin() string {
	if x != nil && x.DataFin != nil {
		return *x.DataFin
	}
	return ""
}

type CheckIDDataFinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string                `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Infos   []*CheckIDDataFinItem `protobuf:"bytes,20,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *CheckIDDataFinRequest) Reset() {
	*x = CheckIDDataFinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIDDataFinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIDDataFinRequest) ProtoMessage() {}

func (x *CheckIDDataFinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIDDataFinRequest.ProtoReflect.Descriptor instead.
func (*CheckIDDataFinRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{11}
}

func (x *CheckIDDataFinRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CheckIDDataFinRequest) GetInfos() []*CheckIDDataFinItem {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CheckIDDataFinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID  string `protobuf:"bytes,10,opt,name=DataID,json=dataID,proto3" json:"DataID,omitempty"`
	DataFin string `protobuf:"bytes,20,opt,name=DataFin,json=dataFin,proto3" json:"DataFin,omitempty"`
	TxTime  uint32 `protobuf:"varint,30,opt,name=TxTime,json=txTime,proto3" json:"TxTime,omitempty"`
	Passed  bool   `protobuf:"varint,40,opt,name=Passed,json=passed,proto3" json:"Passed,omitempty"`
}

func (x *CheckIDDataFinResp) Reset() {
	*x = CheckIDDataFinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIDDataFinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIDDataFinResp) ProtoMessage() {}

func (x *CheckIDDataFinResp) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIDDataFinResp.ProtoReflect.Descriptor instead.
func (*CheckIDDataFinResp) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{12}
}

func (x *CheckIDDataFinResp) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *CheckIDDataFinResp) GetDataFin() string {
	if x != nil {
		return x.DataFin
	}
	return ""
}

func (x *CheckIDDataFinResp) GetTxTime() uint32 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *CheckIDDataFinResp) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

type CheckIDDataFinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string                `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Infos   []*CheckIDDataFinResp `protobuf:"bytes,20,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *CheckIDDataFinResponse) Reset() {
	*x = CheckIDDataFinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIDDataFinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIDDataFinResponse) ProtoMessage() {}

func (x *CheckIDDataFinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIDDataFinResponse.ProtoReflect.Descriptor instead.
func (*CheckIDDataFinResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{13}
}

func (x *CheckIDDataFinResponse) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CheckIDDataFinResponse) GetInfos() []*CheckIDDataFinResp {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CheckDataFinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID  string   `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	DataFins []string `protobuf:"bytes,20,rep,name=DataFins,json=dataFins,proto3" json:"DataFins,omitempty"`
}

func (x *CheckDataFinRequest) Reset() {
	*x = CheckDataFinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataFinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataFinRequest) ProtoMessage() {}

func (x *CheckDataFinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataFinRequest.ProtoReflect.Descriptor instead.
func (*CheckDataFinRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{14}
}

func (x *CheckDataFinRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CheckDataFinRequest) GetDataFins() []string {
	if x != nil {
		return x.DataFins
	}
	return nil
}

type CheckDataFinResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataFin string `protobuf:"bytes,10,opt,name=DataFin,json=dataFin,proto3" json:"DataFin,omitempty"`
	TxTime  uint32 `protobuf:"varint,20,opt,name=TxTime,json=txTime,proto3" json:"TxTime,omitempty"`
	Passed  bool   `protobuf:"varint,30,opt,name=Passed,json=passed,proto3" json:"Passed,omitempty"`
}

func (x *CheckDataFinResp) Reset() {
	*x = CheckDataFinResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataFinResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataFinResp) ProtoMessage() {}

func (x *CheckDataFinResp) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataFinResp.ProtoReflect.Descriptor instead.
func (*CheckDataFinResp) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{15}
}

func (x *CheckDataFinResp) GetDataFin() string {
	if x != nil {
		return x.DataFin
	}
	return ""
}

func (x *CheckDataFinResp) GetTxTime() uint32 {
	if x != nil {
		return x.TxTime
	}
	return 0
}

func (x *CheckDataFinResp) GetPassed() bool {
	if x != nil {
		return x.Passed
	}
	return false
}

type CheckDataFinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string              `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Infos   []*CheckDataFinResp `protobuf:"bytes,20,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *CheckDataFinResponse) Reset() {
	*x = CheckDataFinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataFinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataFinResponse) ProtoMessage() {}

func (x *CheckDataFinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataFinResponse.ProtoReflect.Descriptor instead.
func (*CheckDataFinResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{16}
}

func (x *CheckDataFinResponse) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CheckDataFinResponse) GetInfos() []*CheckDataFinResp {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CheckIDDataFinWithDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataID string  `protobuf:"bytes,10,opt,name=DataID,json=dataID,proto3" json:"DataID,omitempty"`
	Data   *string `protobuf:"bytes,20,opt,name=Data,json=data,proto3,oneof" json:"Data,omitempty"`
}

func (x *CheckIDDataFinWithDataItem) Reset() {
	*x = CheckIDDataFinWithDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIDDataFinWithDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIDDataFinWithDataItem) ProtoMessage() {}

func (x *CheckIDDataFinWithDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIDDataFinWithDataItem.ProtoReflect.Descriptor instead.
func (*CheckIDDataFinWithDataItem) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{17}
}

func (x *CheckIDDataFinWithDataItem) GetDataID() string {
	if x != nil {
		return x.DataID
	}
	return ""
}

func (x *CheckIDDataFinWithDataItem) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type CheckIDDataFinWithDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string                        `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Type    DataType                      `protobuf:"varint,20,opt,name=Type,json=type,proto3,enum=bright.datafin.DataType" json:"Type,omitempty"`
	Infos   []*CheckIDDataFinWithDataItem `protobuf:"bytes,30,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *CheckIDDataFinWithDataRequest) Reset() {
	*x = CheckIDDataFinWithDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIDDataFinWithDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIDDataFinWithDataRequest) ProtoMessage() {}

func (x *CheckIDDataFinWithDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIDDataFinWithDataRequest.ProtoReflect.Descriptor instead.
func (*CheckIDDataFinWithDataRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{18}
}

func (x *CheckIDDataFinWithDataRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CheckIDDataFinWithDataRequest) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_RawType
}

func (x *CheckIDDataFinWithDataRequest) GetInfos() []*CheckIDDataFinWithDataItem {
	if x != nil {
		return x.Infos
	}
	return nil
}

type CheckDataFinWithDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string   `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Type    DataType `protobuf:"varint,20,opt,name=Type,json=type,proto3,enum=bright.datafin.DataType" json:"Type,omitempty"`
	Datas   []string `protobuf:"bytes,30,rep,name=Datas,json=datas,proto3" json:"Datas,omitempty"`
}

func (x *CheckDataFinWithDataRequest) Reset() {
	*x = CheckDataFinWithDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckDataFinWithDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDataFinWithDataRequest) ProtoMessage() {}

func (x *CheckDataFinWithDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDataFinWithDataRequest.ProtoReflect.Descriptor instead.
func (*CheckDataFinWithDataRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{19}
}

func (x *CheckDataFinWithDataRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CheckDataFinWithDataRequest) GetType() DataType {
	if x != nil {
		return x.Type
	}
	return DataType_RawType
}

func (x *CheckDataFinWithDataRequest) GetDatas() []string {
	if x != nil {
		return x.Datas
	}
	return nil
}

type QRCheckDefaultParmsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostAddr string `protobuf:"bytes,10,opt,name=HostAddr,json=hostAddr,proto3" json:"HostAddr,omitempty"`
}

func (x *QRCheckDefaultParmsRequest) Reset() {
	*x = QRCheckDefaultParmsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCheckDefaultParmsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCheckDefaultParmsRequest) ProtoMessage() {}

func (x *QRCheckDefaultParmsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCheckDefaultParmsRequest.ProtoReflect.Descriptor instead.
func (*QRCheckDefaultParmsRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{20}
}

func (x *QRCheckDefaultParmsRequest) GetHostAddr() string {
	if x != nil {
		return x.HostAddr
	}
	return ""
}

type QRCheckDefaultParmsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixUrl string   `protobuf:"bytes,10,opt,name=PrefixUrl,json=prefixUrl,proto3" json:"PrefixUrl,omitempty"`
	Types     []string `protobuf:"bytes,20,rep,name=Types,json=types,proto3" json:"Types,omitempty"`
	TopicIDs  []string `protobuf:"bytes,30,rep,name=TopicIDs,json=topicIDs,proto3" json:"TopicIDs,omitempty"`
}

func (x *QRCheckDefaultParmsResponse) Reset() {
	*x = QRCheckDefaultParmsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QRCheckDefaultParmsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QRCheckDefaultParmsResponse) ProtoMessage() {}

func (x *QRCheckDefaultParmsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QRCheckDefaultParmsResponse.ProtoReflect.Descriptor instead.
func (*QRCheckDefaultParmsResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{21}
}

func (x *QRCheckDefaultParmsResponse) GetPrefixUrl() string {
	if x != nil {
		return x.PrefixUrl
	}
	return ""
}

func (x *QRCheckDefaultParmsResponse) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *QRCheckDefaultParmsResponse) GetTopicIDs() []string {
	if x != nil {
		return x.TopicIDs
	}
	return nil
}

type GetQRCheckUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrefixUrl string `protobuf:"bytes,10,opt,name=PrefixUrl,json=prefixUrl,proto3" json:"PrefixUrl,omitempty"`
	Type      string `protobuf:"bytes,20,opt,name=Type,json=type,proto3" json:"Type,omitempty"`
	TopicID   string `protobuf:"bytes,30,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	UrlParams string `protobuf:"bytes,40,opt,name=UrlParams,json=urlParams,proto3" json:"UrlParams,omitempty"`
}

func (x *GetQRCheckUrlRequest) Reset() {
	*x = GetQRCheckUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQRCheckUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQRCheckUrlRequest) ProtoMessage() {}

func (x *GetQRCheckUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQRCheckUrlRequest.ProtoReflect.Descriptor instead.
func (*GetQRCheckUrlRequest) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{22}
}

func (x *GetQRCheckUrlRequest) GetPrefixUrl() string {
	if x != nil {
		return x.PrefixUrl
	}
	return ""
}

func (x *GetQRCheckUrlRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetQRCheckUrlRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *GetQRCheckUrlRequest) GetUrlParams() string {
	if x != nil {
		return x.UrlParams
	}
	return ""
}

type GetQRCheckUrlResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,10,opt,name=Url,json=url,proto3" json:"Url,omitempty"`
}

func (x *GetQRCheckUrlResponse) Reset() {
	*x = GetQRCheckUrlResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_datafin_datafin_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQRCheckUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQRCheckUrlResponse) ProtoMessage() {}

func (x *GetQRCheckUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_datafin_datafin_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQRCheckUrlResponse.ProtoReflect.Descriptor instead.
func (*GetQRCheckUrlResponse) Descriptor() ([]byte, []int) {
	return file_bright_datafin_datafin_proto_rawDescGZIP(), []int{23}
}

func (x *GetQRCheckUrlResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_bright_datafin_datafin_proto protoreflect.FileDescriptor

var file_bright_datafin_datafin_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x1a, 0x13,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xa1, 0x03, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x1b, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x21, 0x0a,
	0x09, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x1d, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12,
	0x1d, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x1b,
	0x0a, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x04,
	0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x54,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x06, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x5a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x48, 0x07, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a,
	0x07, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x42, 0x09,
	0x0a, 0x07, 0x5f, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x54, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x52,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x93, 0x03, 0x0a, 0x05, 0x43, 0x6f, 0x6e, 0x64, 0x73, 0x12,
	0x29, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x52, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x2f, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x52, 0x09, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52,
	0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x2b, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x07, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x55,
	0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2b, 0x0a, 0x07, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x55, 0x69, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x52,
	0x07, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x5a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x52, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x28, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x53, 0x6c,
	0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x52, 0x03, 0x49, 0x44, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x14,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x62,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22,
	0x4a, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x39, 0x0a, 0x0b, 0x44,
	0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc9, 0x02, 0x0a, 0x0b, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1c,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6e, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x32, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x5a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x64, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x44, 0x73,
	0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49,
	0x44, 0x73, 0x22, 0x5e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0x59, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x73,
	0x63, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0x61, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0x57, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x1d,
	0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x22, 0x6b, 0x0a, 0x15, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x38, 0x0a, 0x05,
	0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x62, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x76, 0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64,
	0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x22, 0x6c,
	0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x44, 0x12, 0x38, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66,
	0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x4b, 0x0a, 0x13,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x1a, 0x0a,
	0x08, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a,
	0x07, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x64, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x70, 0x61, 0x73, 0x73, 0x65, 0x64, 0x22, 0x68, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x36, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f,
	0x73, 0x22, 0x56, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x44, 0x61, 0x74, 0x61, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x44, 0x12, 0x17, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01, 0x01,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x44, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a, 0x1d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x1e, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x6e, 0x66, 0x6f, 0x73, 0x22, 0x7b, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x2c,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x62,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x44, 0x61, 0x74, 0x61, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x22, 0x38, 0x0a, 0x1a, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x22, 0x6d, 0x0a, 0x1b,
	0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61,
	0x72, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50,
	0x72, 0x65, 0x66, 0x69, 0x78, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x55, 0x72,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x55,
	0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x44, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x55, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x29,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x72, 0x6c, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a, 0x25, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x61, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x73, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x14,
	0x2a, 0x8d, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x6e, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x10, 0x0a, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x69, 0x6e, 0x67, 0x10, 0x14, 0x12,
	0x17, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x63, 0x65, 0x73, 0x73, 0x10, 0x1e, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x28,
	0x32, 0xa5, 0x09, 0x0a, 0x07, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x78, 0x0a, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x12, 0x24, 0x2e,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x12, 0x70, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x69, 0x6e, 0x73, 0x12, 0x22, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x62, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x73, 0x12, 0x7d, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x73, 0x12, 0x25, 0x2e, 0x62, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66,
	0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x61, 0x6c, 0x6c, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x73, 0x12, 0x7d, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x62, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69,
	0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x69, 0x64, 0x2f, 0x64,
	0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x12, 0x74, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x12, 0x23, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22, 0x0e, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x12, 0x97, 0x01, 0x0a,
	0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x57,
	0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x44, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x2f, 0x69, 0x64, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2f, 0x77, 0x69, 0x74,
	0x68, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x8e, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2b, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x57, 0x69, 0x74,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x62,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2f, 0x77, 0x69,
	0x74, 0x68, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x12, 0x92, 0x01, 0x0a, 0x13, 0x51, 0x52, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x6d, 0x73, 0x12,
	0x2a, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e,
	0x2e, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x61, 0x72, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x51, 0x52, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x6d, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c,
	0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x71, 0x72, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x70, 0x61, 0x72, 0x6d, 0x73, 0x12, 0x7a, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x2e,
	0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x2e, 0x47,
	0x65, 0x74, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x64, 0x61, 0x74,
	0x61, 0x66, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x52, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x72, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x3a, 0x01, 0x2a, 0x22, 0x11, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x71, 0x72, 0x2f, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x2f, 0x75, 0x72, 0x6c, 0x42, 0x31, 0x5a, 0x2f, 0x79, 0x75, 0x6e, 0x2e,
	0x74, 0x65, 0x61, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x66, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_bright_datafin_datafin_proto_rawDescOnce sync.Once
	file_bright_datafin_datafin_proto_rawDescData = file_bright_datafin_datafin_proto_rawDesc
)

func file_bright_datafin_datafin_proto_rawDescGZIP() []byte {
	file_bright_datafin_datafin_proto_rawDescOnce.Do(func() {
		file_bright_datafin_datafin_proto_rawDescData = protoimpl.X.CompressGZIP(file_bright_datafin_datafin_proto_rawDescData)
	})
	return file_bright_datafin_datafin_proto_rawDescData
}

var file_bright_datafin_datafin_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_bright_datafin_datafin_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_bright_datafin_datafin_proto_goTypes = []interface{}{
	(DataType)(0),                         // 0: bright.datafin.DataType
	(DataFinState)(0),                     // 1: bright.datafin.DataFinState
	(*DataFinReq)(nil),                    // 2: bright.datafin.DataFinReq
	(*Conds)(nil),                         // 3: bright.datafin.Conds
	(*CreateDataFinRequest)(nil),          // 4: bright.datafin.CreateDataFinRequest
	(*CreateDataFinResponse)(nil),         // 5: bright.datafin.CreateDataFinResponse
	(*DataItemReq)(nil),                   // 6: bright.datafin.DataItemReq
	(*DataFinInfo)(nil),                   // 7: bright.datafin.DataFinInfo
	(*GetDataFinsRequest)(nil),            // 8: bright.datafin.GetDataFinsRequest
	(*GetDataFinsResponse)(nil),           // 9: bright.datafin.GetDataFinsResponse
	(*GetAllDataFinsRequest)(nil),         // 10: bright.datafin.GetAllDataFinsRequest
	(*GetAllDataFinsResponse)(nil),        // 11: bright.datafin.GetAllDataFinsResponse
	(*CheckIDDataFinItem)(nil),            // 12: bright.datafin.CheckIDDataFinItem
	(*CheckIDDataFinRequest)(nil),         // 13: bright.datafin.CheckIDDataFinRequest
	(*CheckIDDataFinResp)(nil),            // 14: bright.datafin.CheckIDDataFinResp
	(*CheckIDDataFinResponse)(nil),        // 15: bright.datafin.CheckIDDataFinResponse
	(*CheckDataFinRequest)(nil),           // 16: bright.datafin.CheckDataFinRequest
	(*CheckDataFinResp)(nil),              // 17: bright.datafin.CheckDataFinResp
	(*CheckDataFinResponse)(nil),          // 18: bright.datafin.CheckDataFinResponse
	(*CheckIDDataFinWithDataItem)(nil),    // 19: bright.datafin.CheckIDDataFinWithDataItem
	(*CheckIDDataFinWithDataRequest)(nil), // 20: bright.datafin.CheckIDDataFinWithDataRequest
	(*CheckDataFinWithDataRequest)(nil),   // 21: bright.datafin.CheckDataFinWithDataRequest
	(*QRCheckDefaultParmsRequest)(nil),    // 22: bright.datafin.QRCheckDefaultParmsRequest
	(*QRCheckDefaultParmsResponse)(nil),   // 23: bright.datafin.QRCheckDefaultParmsResponse
	(*GetQRCheckUrlRequest)(nil),          // 24: bright.datafin.GetQRCheckUrlRequest
	(*GetQRCheckUrlResponse)(nil),         // 25: bright.datafin.GetQRCheckUrlResponse
	(*bright.StringVal)(nil),              // 26: bright.StringVal
	(*bright.Uint32Val)(nil),              // 27: bright.Uint32Val
	(*bright.StringSliceVal)(nil),         // 28: bright.StringSliceVal
}
var file_bright_datafin_datafin_proto_depIdxs = []int32{
	1,  // 0: bright.datafin.DataFinReq.State:type_name -> bright.datafin.DataFinState
	26, // 1: bright.datafin.Conds.DataID:type_name -> bright.StringVal
	26, // 2: bright.datafin.Conds.DataFinID:type_name -> bright.StringVal
	26, // 3: bright.datafin.Conds.TopicID:type_name -> bright.StringVal
	26, // 4: bright.datafin.Conds.DataFin:type_name -> bright.StringVal
	27, // 5: bright.datafin.Conds.TxTime:type_name -> bright.Uint32Val
	26, // 6: bright.datafin.Conds.TxHash:type_name -> bright.StringVal
	27, // 7: bright.datafin.Conds.Retries:type_name -> bright.Uint32Val
	26, // 8: bright.datafin.Conds.State:type_name -> bright.StringVal
	28, // 9: bright.datafin.Conds.IDs:type_name -> bright.StringSliceVal
	0,  // 10: bright.datafin.CreateDataFinRequest.Type:type_name -> bright.datafin.DataType
	6,  // 11: bright.datafin.CreateDataFinRequest.Infos:type_name -> bright.datafin.DataItemReq
	7,  // 12: bright.datafin.CreateDataFinResponse.Infos:type_name -> bright.datafin.DataFinInfo
	1,  // 13: bright.datafin.DataFinInfo.State:type_name -> bright.datafin.DataFinState
	7,  // 14: bright.datafin.GetDataFinsResponse.Infos:type_name -> bright.datafin.DataFinInfo
	7,  // 15: bright.datafin.GetAllDataFinsResponse.Infos:type_name -> bright.datafin.DataFinInfo
	12, // 16: bright.datafin.CheckIDDataFinRequest.Infos:type_name -> bright.datafin.CheckIDDataFinItem
	14, // 17: bright.datafin.CheckIDDataFinResponse.Infos:type_name -> bright.datafin.CheckIDDataFinResp
	17, // 18: bright.datafin.CheckDataFinResponse.Infos:type_name -> bright.datafin.CheckDataFinResp
	0,  // 19: bright.datafin.CheckIDDataFinWithDataRequest.Type:type_name -> bright.datafin.DataType
	19, // 20: bright.datafin.CheckIDDataFinWithDataRequest.Infos:type_name -> bright.datafin.CheckIDDataFinWithDataItem
	0,  // 21: bright.datafin.CheckDataFinWithDataRequest.Type:type_name -> bright.datafin.DataType
	4,  // 22: bright.datafin.Manager.CreateDataFin:input_type -> bright.datafin.CreateDataFinRequest
	8,  // 23: bright.datafin.Manager.GetDataFins:input_type -> bright.datafin.GetDataFinsRequest
	10, // 24: bright.datafin.Manager.GetAllDataFins:input_type -> bright.datafin.GetAllDataFinsRequest
	13, // 25: bright.datafin.Manager.CheckIDDataFin:input_type -> bright.datafin.CheckIDDataFinRequest
	16, // 26: bright.datafin.Manager.CheckDataFin:input_type -> bright.datafin.CheckDataFinRequest
	20, // 27: bright.datafin.Manager.CheckIDDataFinWithData:input_type -> bright.datafin.CheckIDDataFinWithDataRequest
	21, // 28: bright.datafin.Manager.CheckDataFinWithData:input_type -> bright.datafin.CheckDataFinWithDataRequest
	22, // 29: bright.datafin.Manager.QRCheckDefaultParms:input_type -> bright.datafin.QRCheckDefaultParmsRequest
	24, // 30: bright.datafin.Manager.GetQRCheckUrl:input_type -> bright.datafin.GetQRCheckUrlRequest
	5,  // 31: bright.datafin.Manager.CreateDataFin:output_type -> bright.datafin.CreateDataFinResponse
	9,  // 32: bright.datafin.Manager.GetDataFins:output_type -> bright.datafin.GetDataFinsResponse
	11, // 33: bright.datafin.Manager.GetAllDataFins:output_type -> bright.datafin.GetAllDataFinsResponse
	15, // 34: bright.datafin.Manager.CheckIDDataFin:output_type -> bright.datafin.CheckIDDataFinResponse
	18, // 35: bright.datafin.Manager.CheckDataFin:output_type -> bright.datafin.CheckDataFinResponse
	15, // 36: bright.datafin.Manager.CheckIDDataFinWithData:output_type -> bright.datafin.CheckIDDataFinResponse
	18, // 37: bright.datafin.Manager.CheckDataFinWithData:output_type -> bright.datafin.CheckDataFinResponse
	23, // 38: bright.datafin.Manager.QRCheckDefaultParms:output_type -> bright.datafin.QRCheckDefaultParmsResponse
	25, // 39: bright.datafin.Manager.GetQRCheckUrl:output_type -> bright.datafin.GetQRCheckUrlResponse
	31, // [31:40] is the sub-list for method output_type
	22, // [22:31] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_bright_datafin_datafin_proto_init() }
func file_bright_datafin_datafin_proto_init() {
	if File_bright_datafin_datafin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bright_datafin_datafin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFinReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conds); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataFinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDataFinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataFinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataFinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDataFinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDataFinsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllDataFinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIDDataFinItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIDDataFinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIDDataFinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIDDataFinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataFinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataFinResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataFinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIDDataFinWithDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIDDataFinWithDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckDataFinWithDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCheckDefaultParmsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QRCheckDefaultParmsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQRCheckUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_datafin_datafin_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQRCheckUrlResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bright_datafin_datafin_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_bright_datafin_datafin_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_bright_datafin_datafin_proto_msgTypes[17].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bright_datafin_datafin_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bright_datafin_datafin_proto_goTypes,
		DependencyIndexes: file_bright_datafin_datafin_proto_depIdxs,
		EnumInfos:         file_bright_datafin_datafin_proto_enumTypes,
		MessageInfos:      file_bright_datafin_datafin_proto_msgTypes,
	}.Build()
	File_bright_datafin_datafin_proto = out.File
	file_bright_datafin_datafin_proto_rawDesc = nil
	file_bright_datafin_datafin_proto_goTypes = nil
	file_bright_datafin_datafin_proto_depIdxs = nil
}
