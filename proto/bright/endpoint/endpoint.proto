syntax = "proto3";

package bright.endpoint;

option go_package = "yun.tea/block/bright/proto/bright/endpoint";
import "bright/bright.proto";
import "bright/basetype/basetype.proto";
import "google/api/annotations.proto";

service Manager {
  rpc CreateEndpoint(CreateEndpointRequest) returns (CreateEndpointResponse) {
    option (google.api.http) = {
      post:"/create/endpoint"
      body:"*"
    };
  }
  rpc UpdateEndpoint(UpdateEndpointRequest) returns (UpdateEndpointResponse) {
    option (google.api.http) = {
      post:"/update/endpoint"
      body:"*"
    };
  }
  rpc GetEndpoint(GetEndpointRequest) returns (GetEndpointResponse) {
    option (google.api.http) = {
      post:"/get/endpoint"
      body:"*"
    };
  }
  rpc GetEndpoints(GetEndpointsRequest) returns (GetEndpointsResponse) {
    option (google.api.http) = {
      post:"/get/endpoints"
      body:"*"
    };
  }
  rpc DeleteEndpoint(DeleteEndpointRequest) returns (DeleteEndpointResponse) {
    option (google.api.http) = {
      post:"/delete/endpoint"
      body:"*"
    };
  }
}

message EndpointReq {
  optional string ID = 10;
  optional string Name = 11;
  optional string Address = 20;
  optional basetype.EndpointState State = 30;
  optional uint32 RPS = 40;
  optional string Remark = 50;
}

message Endpoint {
  string ID = 10;
  string Name = 11;
  string Address = 20;
  basetype.EndpointState State = 30;
  uint32 RPS = 40;
  string Remark = 50;
  uint64 CreatedAt = 60;
  uint64 UpdatedAt = 70;
}

message Conds {
  bright.StringVal ID = 10;
  bright.StringVal Name = 11;
  bright.StringVal Address = 20;
  bright.StringVal State = 30;
  bright.Uint32Val RPS = 40;
  bright.StringSliceVal IDs = 100;
}

message CreateEndpointRequest { EndpointReq Info = 10; }
message CreateEndpointResponse { Endpoint Info = 10; }

message UpdateEndpointRequest { 
  string ID = 10;
  optional string Name = 20;
  optional string Address = 30;
  optional uint32 RPS = 40;
  optional string Remark = 50;
 }
message UpdateEndpointResponse { Endpoint Info = 10; }

message GetEndpointRequest { string ID = 10; }
message GetEndpointResponse { Endpoint Info = 10; }

message GetEndpointsRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetEndpointsResponse {
  repeated Endpoint Infos = 10;
  uint32 Total = 20;
}

message DeleteEndpointRequest { string ID = 10; }
message DeleteEndpointResponse { Endpoint Info = 10; }
