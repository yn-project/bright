// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v3.18.1
// source: bright/topic/topic.proto

package topic

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TopicType int32

const (
	TopicType_TopicTypeDefault TopicType = 0
	TopicType_IDType           TopicType = 10
	TopicType_OriginalType     TopicType = 20
)

// Enum value maps for TopicType.
var (
	TopicType_name = map[int32]string{
		0:  "TopicTypeDefault",
		10: "IDType",
		20: "OriginalType",
	}
	TopicType_value = map[string]int32{
		"TopicTypeDefault": 0,
		"IDType":           10,
		"OriginalType":     20,
	}
)

func (x TopicType) Enum() *TopicType {
	p := new(TopicType)
	*p = x
	return p
}

func (x TopicType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TopicType) Descriptor() protoreflect.EnumDescriptor {
	return file_bright_topic_topic_proto_enumTypes[0].Descriptor()
}

func (TopicType) Type() protoreflect.EnumType {
	return &file_bright_topic_topic_proto_enumTypes[0]
}

func (x TopicType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TopicType.Descriptor instead.
func (TopicType) EnumDescriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{0}
}

type CreateTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string    `protobuf:"bytes,10,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type       TopicType `protobuf:"varint,20,opt,name=Type,json=type,proto3,enum=bright.topic.TopicType" json:"Type,omitempty"`
	ChangeAble bool      `protobuf:"varint,30,opt,name=ChangeAble,json=changeAble,proto3" json:"ChangeAble,omitempty"`
	Remark     string    `protobuf:"bytes,40,opt,name=Remark,json=remark,proto3" json:"Remark,omitempty"`
}

func (x *CreateTopicRequest) Reset() {
	*x = CreateTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicRequest) ProtoMessage() {}

func (x *CreateTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicRequest.ProtoReflect.Descriptor instead.
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTopicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTopicRequest) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_TopicTypeDefault
}

func (x *CreateTopicRequest) GetChangeAble() bool {
	if x != nil {
		return x.ChangeAble
	}
	return false
}

func (x *CreateTopicRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

type CreateTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID    string    `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Name       string    `protobuf:"bytes,20,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type       TopicType `protobuf:"varint,30,opt,name=Type,json=type,proto3,enum=bright.topic.TopicType" json:"Type,omitempty"`
	ChangeAble bool      `protobuf:"varint,40,opt,name=ChangeAble,json=changeAble,proto3" json:"ChangeAble,omitempty"`
	Remark     string    `protobuf:"bytes,50,opt,name=Remark,json=remark,proto3" json:"Remark,omitempty"`
	CreatedAt  uint32    `protobuf:"varint,60,opt,name=CreatedAt,json=createdAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *CreateTopicResponse) Reset() {
	*x = CreateTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTopicResponse) ProtoMessage() {}

func (x *CreateTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTopicResponse.ProtoReflect.Descriptor instead.
func (*CreateTopicResponse) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTopicResponse) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *CreateTopicResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTopicResponse) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_TopicTypeDefault
}

func (x *CreateTopicResponse) GetChangeAble() bool {
	if x != nil {
		return x.ChangeAble
	}
	return false
}

func (x *CreateTopicResponse) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CreateTopicResponse) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type TopicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         *string    `protobuf:"bytes,10,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	TopicID    *string    `protobuf:"bytes,20,opt,name=TopicID,proto3,oneof" json:"TopicID,omitempty"`
	Name       *string    `protobuf:"bytes,30,opt,name=Name,proto3,oneof" json:"Name,omitempty"`
	Type       *TopicType `protobuf:"varint,40,opt,name=Type,proto3,enum=bright.topic.TopicType,oneof" json:"Type,omitempty"`
	ChangeAble *bool      `protobuf:"varint,50,opt,name=ChangeAble,proto3,oneof" json:"ChangeAble,omitempty"`
	Contract   *string    `protobuf:"bytes,60,opt,name=Contract,proto3,oneof" json:"Contract,omitempty"`
	Remark     *string    `protobuf:"bytes,70,opt,name=Remark,proto3,oneof" json:"Remark,omitempty"`
}

func (x *TopicReq) Reset() {
	*x = TopicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicReq) ProtoMessage() {}

func (x *TopicReq) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicReq.ProtoReflect.Descriptor instead.
func (*TopicReq) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{2}
}

func (x *TopicReq) GetID() string {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return ""
}

func (x *TopicReq) GetTopicID() string {
	if x != nil && x.TopicID != nil {
		return *x.TopicID
	}
	return ""
}

func (x *TopicReq) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *TopicReq) GetType() TopicType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return TopicType_TopicTypeDefault
}

func (x *TopicReq) GetChangeAble() bool {
	if x != nil && x.ChangeAble != nil {
		return *x.ChangeAble
	}
	return false
}

func (x *TopicReq) GetContract() string {
	if x != nil && x.Contract != nil {
		return *x.Contract
	}
	return ""
}

func (x *TopicReq) GetRemark() string {
	if x != nil && x.Remark != nil {
		return *x.Remark
	}
	return ""
}

type TopicInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID    string    `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Name       string    `protobuf:"bytes,20,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type       TopicType `protobuf:"varint,30,opt,name=Type,json=type,proto3,enum=bright.topic.TopicType" json:"Type,omitempty"`
	ChangeAble bool      `protobuf:"varint,40,opt,name=ChangeAble,json=changeAble,proto3" json:"ChangeAble,omitempty"`
	Remark     string    `protobuf:"bytes,50,opt,name=Remark,json=remark,proto3" json:"Remark,omitempty"`
	CreatedAt  uint32    `protobuf:"varint,60,opt,name=CreatedAt,json=createdAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *TopicInfo) Reset() {
	*x = TopicInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicInfo) ProtoMessage() {}

func (x *TopicInfo) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicInfo.ProtoReflect.Descriptor instead.
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{3}
}

func (x *TopicInfo) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *TopicInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TopicInfo) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_TopicTypeDefault
}

func (x *TopicInfo) GetChangeAble() bool {
	if x != nil {
		return x.ChangeAble
	}
	return false
}

func (x *TopicInfo) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *TopicInfo) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetTopicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID string `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
}

func (x *GetTopicRequest) Reset() {
	*x = GetTopicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicRequest) ProtoMessage() {}

func (x *GetTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicRequest.ProtoReflect.Descriptor instead.
func (*GetTopicRequest) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{4}
}

func (x *GetTopicRequest) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

type GetTopicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TopicID    string    `protobuf:"bytes,10,opt,name=TopicID,json=topicID,proto3" json:"TopicID,omitempty"`
	Name       string    `protobuf:"bytes,20,opt,name=Name,json=name,proto3" json:"Name,omitempty"`
	Type       TopicType `protobuf:"varint,30,opt,name=Type,json=type,proto3,enum=bright.topic.TopicType" json:"Type,omitempty"`
	ChangeAble bool      `protobuf:"varint,40,opt,name=ChangeAble,json=changeAble,proto3" json:"ChangeAble,omitempty"`
	Remark     string    `protobuf:"bytes,50,opt,name=Remark,json=remark,proto3" json:"Remark,omitempty"`
	CreatedAt  uint32    `protobuf:"varint,60,opt,name=CreatedAt,json=createdAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *GetTopicResponse) Reset() {
	*x = GetTopicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicResponse) ProtoMessage() {}

func (x *GetTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicResponse.ProtoReflect.Descriptor instead.
func (*GetTopicResponse) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{5}
}

func (x *GetTopicResponse) GetTopicID() string {
	if x != nil {
		return x.TopicID
	}
	return ""
}

func (x *GetTopicResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTopicResponse) GetType() TopicType {
	if x != nil {
		return x.Type
	}
	return TopicType_TopicTypeDefault
}

func (x *GetTopicResponse) GetChangeAble() bool {
	if x != nil {
		return x.ChangeAble
	}
	return false
}

func (x *GetTopicResponse) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *GetTopicResponse) GetCreatedAt() uint32 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type GetTopicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset uint32 `protobuf:"varint,10,opt,name=Offset,json=offset,proto3" json:"Offset,omitempty"`
	Limit  uint32 `protobuf:"varint,20,opt,name=Limit,json=limit,proto3" json:"Limit,omitempty"`
}

func (x *GetTopicsRequest) Reset() {
	*x = GetTopicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsRequest) ProtoMessage() {}

func (x *GetTopicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsRequest.ProtoReflect.Descriptor instead.
func (*GetTopicsRequest) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{6}
}

func (x *GetTopicsRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetTopicsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTopicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total uint32       `protobuf:"varint,10,opt,name=Total,json=total,proto3" json:"Total,omitempty"`
	Infos []*TopicInfo `protobuf:"bytes,20,rep,name=Infos,json=infos,proto3" json:"Infos,omitempty"`
}

func (x *GetTopicsResponse) Reset() {
	*x = GetTopicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_bright_topic_topic_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicsResponse) ProtoMessage() {}

func (x *GetTopicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_bright_topic_topic_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicsResponse.ProtoReflect.Descriptor instead.
func (*GetTopicsResponse) Descriptor() ([]byte, []int) {
	return file_bright_topic_topic_proto_rawDescGZIP(), []int{7}
}

func (x *GetTopicsResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetTopicsResponse) GetInfos() []*TopicInfo {
	if x != nil {
		return x.Infos
	}
	return nil
}

var File_bright_topic_topic_proto protoreflect.FileDescriptor

var file_bright_topic_topic_proto_rawDesc = []byte{
	0x0a, 0x18, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2f, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x62, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x17, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xc6, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xb8, 0x02, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x13, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x48, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x04, 0x52, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x3c, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x05, 0x52, 0x08, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x1b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x46, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x05,
	0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49,
	0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62,
	0x6c, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x42,
	0x09, 0x0a, 0x07, 0x5f, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xbc, 0x01, 0x0a, 0x09, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x62, 0x6c,
	0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41,
	0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x32, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x22, 0xc3, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x41, 0x62, 0x6c, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x41, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x40, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x58,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x6f, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68,
	0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x05, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x2a, 0x3f, 0x0a, 0x09, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x54, 0x79,
	0x70, 0x65, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x44, 0x54, 0x79, 0x70, 0x65, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0x14, 0x32, 0xbf, 0x02, 0x0a, 0x07, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x20, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2f, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x60, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x1d, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x3a, 0x01, 0x2a, 0x22, 0x0a, 0x2f, 0x67, 0x65, 0x74, 0x2f,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x64, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x73, 0x12, 0x1e, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74, 0x2e, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x3a, 0x01, 0x2a, 0x22, 0x0b,
	0x2f, 0x67, 0x65, 0x74, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x42, 0x2f, 0x5a, 0x2d, 0x79,
	0x75, 0x6e, 0x2e, 0x74, 0x65, 0x61, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2f, 0x62, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_bright_topic_topic_proto_rawDescOnce sync.Once
	file_bright_topic_topic_proto_rawDescData = file_bright_topic_topic_proto_rawDesc
)

func file_bright_topic_topic_proto_rawDescGZIP() []byte {
	file_bright_topic_topic_proto_rawDescOnce.Do(func() {
		file_bright_topic_topic_proto_rawDescData = protoimpl.X.CompressGZIP(file_bright_topic_topic_proto_rawDescData)
	})
	return file_bright_topic_topic_proto_rawDescData
}

var file_bright_topic_topic_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_bright_topic_topic_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_bright_topic_topic_proto_goTypes = []interface{}{
	(TopicType)(0),              // 0: bright.topic.TopicType
	(*CreateTopicRequest)(nil),  // 1: bright.topic.CreateTopicRequest
	(*CreateTopicResponse)(nil), // 2: bright.topic.CreateTopicResponse
	(*TopicReq)(nil),            // 3: bright.topic.TopicReq
	(*TopicInfo)(nil),           // 4: bright.topic.TopicInfo
	(*GetTopicRequest)(nil),     // 5: bright.topic.GetTopicRequest
	(*GetTopicResponse)(nil),    // 6: bright.topic.GetTopicResponse
	(*GetTopicsRequest)(nil),    // 7: bright.topic.GetTopicsRequest
	(*GetTopicsResponse)(nil),   // 8: bright.topic.GetTopicsResponse
}
var file_bright_topic_topic_proto_depIdxs = []int32{
	0, // 0: bright.topic.CreateTopicRequest.Type:type_name -> bright.topic.TopicType
	0, // 1: bright.topic.CreateTopicResponse.Type:type_name -> bright.topic.TopicType
	0, // 2: bright.topic.TopicReq.Type:type_name -> bright.topic.TopicType
	0, // 3: bright.topic.TopicInfo.Type:type_name -> bright.topic.TopicType
	0, // 4: bright.topic.GetTopicResponse.Type:type_name -> bright.topic.TopicType
	4, // 5: bright.topic.GetTopicsResponse.Infos:type_name -> bright.topic.TopicInfo
	1, // 6: bright.topic.Manager.CreateTopic:input_type -> bright.topic.CreateTopicRequest
	5, // 7: bright.topic.Manager.GetTopic:input_type -> bright.topic.GetTopicRequest
	7, // 8: bright.topic.Manager.GetTopics:input_type -> bright.topic.GetTopicsRequest
	2, // 9: bright.topic.Manager.CreateTopic:output_type -> bright.topic.CreateTopicResponse
	6, // 10: bright.topic.Manager.GetTopic:output_type -> bright.topic.GetTopicResponse
	8, // 11: bright.topic.Manager.GetTopics:output_type -> bright.topic.GetTopicsResponse
	9, // [9:12] is the sub-list for method output_type
	6, // [6:9] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_bright_topic_topic_proto_init() }
func file_bright_topic_topic_proto_init() {
	if File_bright_topic_topic_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_bright_topic_topic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_bright_topic_topic_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_bright_topic_topic_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_bright_topic_topic_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_bright_topic_topic_proto_goTypes,
		DependencyIndexes: file_bright_topic_topic_proto_depIdxs,
		EnumInfos:         file_bright_topic_topic_proto_enumTypes,
		MessageInfos:      file_bright_topic_topic_proto_msgTypes,
	}.Build()
	File_bright_topic_topic_proto = out.File
	file_bright_topic_topic_proto_rawDesc = nil
	file_bright_topic_topic_proto_goTypes = nil
	file_bright_topic_topic_proto_depIdxs = nil
}
