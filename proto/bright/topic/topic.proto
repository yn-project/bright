syntax = "proto3";

package bright.topic;

option go_package = "yun.tea/block/bright/proto/bright/proto/topic";
import "bright/bright.proto";
import "bright/basetype/basetype.proto";
import "google/api/annotations.proto";

service Manager {
  rpc CreateTopic(CreateTopicRequest) returns (CreateTopicResponse) {
    option (google.api.http) = {
      post:"/create/topic"
      body:"*"
    };
  }

  rpc GetTopic(GetTopicRequest) returns (GetTopicResponse) {
    option (google.api.http) = {
      post:"/get/topic"
      body:"*"
    };
  }

  rpc GetTopics(GetTopicsRequest) returns (GetTopicsResponse) {
    option (google.api.http) = {
      post:"/get/topics"
      body:"*"
    };
  }
}

enum TopicType {
  TopicTypeDefault = 0;
  IDType = 10;
  OriginalType = 20;
}

message CreateTopicRequest{
  string    Name  = 10 [json_name="name"];
  TopicType Type = 20 [json_name="type"];
  bool      ChangeAble  = 30 [json_name="changeAble"];
  string    Remark  = 40 [json_name="remark"];
}

message CreateTopicResponse{
  string    TopicID = 10 [json_name="topicID"];
  string    Name = 20 [json_name="name"];
  TopicType Type = 30 [json_name="type"];
  bool      ChangeAble = 40 [json_name="changeAble"];
  string    Remark = 50 [json_name="remark"];
  uint32    CreatedAt = 60 [json_name="createdAt"];
}

message TopicReq {
  optional string    ID = 10;
  optional string    TopicID = 20;
  optional string    Name = 30;
  optional TopicType Type = 40;
  optional bool      ChangeAble = 50;
  optional string    Contract = 60;
  optional string    Remark = 70;
}

message TopicInfo {
  string    TopicID = 10 [json_name="topicID"];
  string    Name = 20 [json_name="name"];
  TopicType Type = 30 [json_name="type"];
  bool      ChangeAble = 40 [json_name="changeAble"];
  string    Remark = 50 [json_name="remark"];
  uint32    CreatedAt = 60 [json_name="createdAt"];
}

message GetTopicRequest { 
  string TopicID = 10 [json_name="topicID"];
}
message GetTopicResponse { 
  string    TopicID = 10 [json_name="topicID"];
  string    Name = 20 [json_name="name"];
  TopicType Type = 30 [json_name="type"];
  bool      ChangeAble = 40 [json_name="changeAble"];
  string    Remark = 50 [json_name="remark"];
  uint32    CreatedAt = 60 [json_name="createdAt"];
}

message GetTopicsRequest { 
  uint32 Offset = 10 [json_name="offset"];
  uint32 Limit = 20 [json_name="limit"];
}
message GetTopicsResponse {
  uint32 Total = 10 [json_name="total"]; 
  repeated TopicInfo  Infos = 20 [json_name="infos"]; 
}
