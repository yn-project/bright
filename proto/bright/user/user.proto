syntax = "proto3";

package bright.user;

option go_package = "yun.tea/block/bright/proto/bright/user";
import "bright/bright.proto";
import "google/api/annotations.proto";

service Manager {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse) {
    option (google.api.http) = {
      post:"/create/user"
      body:"*"
    };
  }
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {
    option (google.api.http) = {
      post:"/update/user"
      body:"*"
    };
  }
  rpc GetUser(GetUserRequest) returns (GetUserResponse) {
    option (google.api.http) = {
      post:"/get/user"
      body:"*"
    };
  }
  rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
    option (google.api.http) = {
      post:"/get/users"
      body:"*"
    };
  }
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      post:"/delete/user"
      body:"*"
    };
  }
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post:"/login"
      body:"*"
    };
  }
  rpc Logout(LogoutRequest) returns (LogoutResponse) {
    option (google.api.http) = {
      post:"/logout"
      body:"*"
    };
  }
  rpc Logined(LoginedRequest) returns (LoginedResponse) {
    option (google.api.http) = {
      post:"/logined"
      body:"*"
    };
  }
  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse) {
    option (google.api.http) = {
      post:"/authenticate"
      body:"*"
    };
  }
}

message UserReq {
  optional string ID       = 10;
  optional string Name     = 20;
  optional string Password = 30;
  optional string Remark   = 40;
}

message User {
  string ID        = 10;
  string Name      = 20;
  string Remark    = 30;
  uint64 CreatedAt = 40;
  uint64 UpdatedAt = 50;
  string Token     = 60;
}

message Conds {
  bright.StringVal ID       = 10;
  bright.StringVal Name     = 20;
  bright.StringSliceVal IDs = 100;
}

message CreateUserRequest { UserReq Info = 10; }
message CreateUserResponse { User Info = 10; }

message UpdateUserRequest { UserReq Info = 10; }
message UpdateUserResponse { User Info = 10; }

message GetUserRequest { string ID = 10; }
message GetUserResponse { User Info = 10; }

message GetUsersRequest {
  Conds Conds = 10;
  int32 Offset = 20;
  int32 Limit = 30;
}

message GetUsersResponse {
  repeated User Infos = 10;
  uint32 Total = 20;
}

message DeleteUserRequest { string ID = 10; }
message DeleteUserResponse { User Info = 10; }

message LoginRequest { 
    string Name     = 10;
    string Password = 20; 
}
message LoginResponse { User Info = 10; }

message LogoutRequest { 
  string UserID = 10;
  string Token  = 20; 
}

message LogoutResponse { User Info = 10; }

message LoginedRequest { 
  string UserID = 10;
  string Token  = 20;
}
message LoginedResponse { User Info = 10; }

message AuthenticateRequest { 
  optional string UserID = 10;
  string Token = 20;
  string Resource = 30;
  string Method = 40;
}
message AuthenticateResponse { bool Info = 10; }
