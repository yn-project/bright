package data_fin

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/Vigo-Tea/go-ethereum-ant"
	"github.com/Vigo-Tea/go-ethereum-ant/accounts/abi"
	"github.com/Vigo-Tea/go-ethereum-ant/accounts/abi/bind"
	"github.com/Vigo-Tea/go-ethereum-ant/common"
	"github.com/Vigo-Tea/go-ethereum-ant/core/types"
	"github.com/Vigo-Tea/go-ethereum-ant/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// AdminAdminInfo is an auto generated low-level Go binding around an user-defined struct.
type AdminAdminInfo struct {
	Enable  bool
	Info    string
	IsValid bool
}

// DataFinFinInfo is an auto generated low-level Go binding around an user-defined struct.
type DataFinFinInfo struct {
	ID      string
	Name    string
	Info    string
	IsValid bool
}

// DataFinIDFinInfo is an auto generated low-level Go binding around an user-defined struct.
type DataFinIDFinInfo struct {
	ID         string
	Name       string
	Info       string
	ChangeAble bool
	IsValid    bool
}

// DataFinMetaData contains all meta data concerning the DataFin contract.
var DataFinMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cteator\",\"type\":\"address\"}],\"name\":\"DataFinCreate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cteator\",\"type\":\"address\"}],\"name\":\"TopicCreate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"AddAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint64[]\",\"name\":\"ids\",\"type\":\"uint64[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"AddIDsItems\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"AddItems\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"changeAble\",\"type\":\"bool\"}],\"name\":\"CreateIDTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"CreateTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"DeleteAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetAdminInfos\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"structAdmin.AdminInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetIDTopics\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"ID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"ChangeAble\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"structDataFin.IDFinInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetTopics\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"ID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"structDataFin.FinInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"IsAdminEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"SetEnableAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint64[]\",\"name\":\"ids\",\"type\":\"uint64[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"VerifyIDItems\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"VerifyItems\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"Version\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60c0604052601f60808190527f4461746146696e2d76312e322e302d776974682d41646d696e2d4f776e65720060a09081526200004091600a9190620001ec565b503480156200004e57600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a039190911691907f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735908290a360408051606081018252600180825282518084018452600a81527f726f6f742061646d696e00000000000000000000000000000000000000000000602080830191909152808401918252838501839052336000908152838252949094208351815460ff191690151517815590518051939491936200011e938501929190910190620001ec565b50604091909101516002918201805491151560ff19909216919091179055805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054600160a060020a031916331790556003805463ffffffff16916200019183620002e8565b91906101000a81548163ffffffff021916908363ffffffff1602179055505033600160a060020a03167f7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a160405160405180910390a262000332565b828054620001fa9062000292565b90600052602060002090601f0160209004810192826200021e576000855562000269565b82601f106200023957805160ff191683800117855562000269565b8280016001018555821562000269579182015b82811115620002695782518255916020019190600101906200024c565b50620002779291506200027b565b5090565b5b808211156200027757600081556001016200027c565b600281046001821680620002a757607f821691505b60208210811415620002e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600063ffffffff8083168181141562000328577f4e487b710000000000000000000000000000000000000000000000000000000083526011600452602483fd5b6001019392505050565b612ac780620003426000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900480634e553263116100b457806393d721ca1161008357806393d721ca1461023f578063d3ef0d2414610254578063f285329214610267578063f28c12d51461027a5761011d565b80634e553263146101e45780635f0ffbff146101f75780636ca1438b1461020c57806374a94c401461022c5761011d565b80632d8e3250116100f05780632d8e3250146101885780633561247d146101a857806339f19d71146101bb57806343672d61146101d15761011d565b80630ae50a39146101225780631329be2e146101405780631af6bd3d146101605780631f2c3df614610175575b600080fd5b61012a61028d565b60405161013791906124f5565b60405180910390f35b61015361014e3660046121c3565b61029c565b6040516101379190612763565b61017361016e3660046120e9565b610449565b005b610173610183366004612300565b6105a2565b61019b610196366004612188565b610735565b604051610137919061279b565b6101736101b636600461213c565b6108c4565b6101c3610a2e565b604051610137929190612509565b61019b6101df3660046120e9565b610d9f565b6101736101f236600461210a565b610dbd565b6101ff610e15565b6040516101379190612610565b61021f61021a3660046121c3565b6110f6565b60405161013791906125ca565b61021f61023a36600461221a565b61133c565b610247611592565b60405161013791906126bb565b61017361026236600461237a565b61187d565b6101736102753660046120e9565b611a37565b61021f61028836600461221a565b611acc565b600054600160a060020a031690565b3360009081526001602052604090205460609060ff16806102d557506102c061028d565b600160a060020a031633600160a060020a0316145b6102fd5760405160e560020a62461bcd0281526004016102f490612871565b60405180910390fd5b60048360405161030d919061243b565b9081526040519081900360200190206003015460ff166103425760405160e560020a62461bcd0281526004016102f49061283a565b6000825167ffffffffffffffff81111561036f5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610398578160200160208202803683370190505b50905060005b8351811015610441576008856040516103b7919061243b565b908152602001604051809103902060008583815181106103ea5760e060020a634e487b7102600052603260045260246000fd5b60200260200101518152602001908152602001600020548282815181106104245760e060020a634e487b7102600052603260045260246000fd5b60209081029190910101528061043981612a20565b91505061039e565b509392505050565b600054600160a060020a031633146104765760405160e560020a62461bcd0281526004016102f4906127a6565b600160a060020a03811660009081526001602081905260408220805460ff1916815591906104a690830182611e91565b50600201805460ff191690556003805463ffffffff169060006104c8836129c2565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060005b60025481101561059e57600281815481106105185760e060020a634e487b7102600052603260045260246000fd5b600091825260209091200154600160a060020a038381169116141561058c5760006002828154811061055d5760e060020a634e487b7102600052603260045260246000fd5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b8061059681612a20565b9150506104ea565b5050565b3360009081526001602052604090205460ff16806105d857506105c361028d565b600160a060020a031633600160a060020a0316145b6105f75760405160e560020a62461bcd0281526004016102f490612871565b600483604051610607919061243b565b9081526040519081900360200190206003015460ff161561063d5760405160e560020a62461bcd0281526004016102f490612905565b604051806080016040528084815260200183815260200182815260200160011515815250600484604051610671919061243b565b9081526020016040518091039020600082015181600001908051906020019061069b929190611ed0565b5060208281015180516106b49260018501920190611ed0565b50604082015180516106d0916002840191602090910190611ed0565b50606091909101516003909101805460ff191691151591909117905560058054600181018255600091909152835161072f917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001906020860190611ed0565b50505050565b6000808290506000600a805461074a906129e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610776906129e2565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b5050505050905080518251146107de576000925050506108bf565b60005b82518110156108bb5781818151811061080d5760e060020a634e487b7102600052603260045260246000fd5b602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106108645760e060020a634e487b7102600052603260045260246000fd5b602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146108a957600093505050506108bf565b806108b381612a20565b9150506107e1565b5050505b919050565b600054600160a060020a031633146108f15760405160e560020a62461bcd0281526004016102f4906127a6565b600160a060020a03821660009081526001602052604090205460ff161561092d5760405160e560020a62461bcd0281526004016102f4906127dd565b6040805160608101825260018082526020808301858152838501839052600160a060020a0387166000908152838352949094208351815460ff191690151517815593518051939493610986938501929190910190611ed0565b50604091909101516002918201805460ff1916911515919091179055805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0385161790556003805463ffffffff1691610a0b83612a3b565b91906101000a81548163ffffffff021916908363ffffffff160217905550505050565b600354606090819060009063ffffffff1667ffffffffffffffff811115610a685760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610aa157816020015b610a8e611f54565b815260200190600190039081610a865790505b5060035490915060009063ffffffff1667ffffffffffffffff811115610ada5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610b03578160200160208202803683370190505b5090506000805b600254811015610d93576000600160a060020a031660028281548110610b435760e060020a634e487b7102600052603260045260246000fd5b600091825260209091200154600160a060020a03161415610b6357610d81565b6001600060028381548110610b8b5760e060020a634e487b7102600052603260045260246000fd5b6000918252602080832090910154600160a060020a0316835282019290925260400190206002015460ff1615610d81576001600060028381548110610be35760e060020a634e487b7102600052603260045260246000fd5b6000918252602080832090910154600160a060020a031683528281019390935260409182019020815160608101909252805460ff16151582526001810180549293919291840191610c33906129e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610c5f906129e2565b8015610cac5780601f10610c8157610100808354040283529160200191610cac565b820191906000526020600020905b815481529060010190602001808311610c8f57829003601f168201915b50505091835250506002919091015460ff1615156020909101528451859084908110610ceb5760e060020a634e487b7102600052603260045260246000fd5b602002602001018190525060028181548110610d1a5760e060020a634e487b7102600052603260045260246000fd5b9060005260206000200160009054906101000a9004600160a060020a0316838381518110610d5b5760e060020a634e487b7102600052603260045260246000fd5b600160a060020a039092166020928302919091019091015281610d7d81612a20565b9250505b80610d8b81612a20565b915050610b0a565b50909350909150509091565b600160a060020a031660009081526001602052604090205460ff1690565b600054600160a060020a03163314610dea5760405160e560020a62461bcd0281526004016102f4906127a6565b600160a060020a03919091166000908152600160205260409020805460ff1916911515919091179055565b60055460609060009067ffffffffffffffff811115610e475760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610e8057816020015b610e6d611f79565b815260200190600190039081610e655790505b50905060005b6005548110156110f057600460058281548110610eb65760e060020a634e487b7102600052603260045260246000fd5b90600052602060002001604051610ecd9190612457565b9081526020016040518091039020604051806080016040529081600082018054610ef6906129e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610f22906129e2565b8015610f6f5780601f10610f4457610100808354040283529160200191610f6f565b820191906000526020600020905b815481529060010190602001808311610f5257829003601f168201915b50505050508152602001600182018054610f88906129e2565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb4906129e2565b80156110015780601f10610fd657610100808354040283529160200191611001565b820191906000526020600020905b815481529060010190602001808311610fe457829003601f168201915b5050505050815260200160028201805461101a906129e2565b80601f0160208091040260200160405190810160405280929190818152602001828054611046906129e2565b80156110935780601f1061106857610100808354040283529160200191611093565b820191906000526020600020905b81548152906001019060200180831161107657829003601f168201915b50505091835250506003919091015460ff16151560209091015282518390839081106110d25760e060020a634e487b7102600052603260045260246000fd5b602002602001018190525080806110e890612a20565b915050610e86565b50905090565b3360009081526001602052604090205460609060ff168061112f575061111a61028d565b600160a060020a031633600160a060020a0316145b61114e5760405160e560020a62461bcd0281526004016102f490612871565b60048360405161115e919061243b565b9081526040519081900360200190206003015460ff166111935760405160e560020a62461bcd0281526004016102f49061283a565b6000825167ffffffffffffffff8111156111c05760e060020a634e487b7102600052604160045260246000fd5b6040519080825280602002602001820160405280156111e9578160200160208202803683370190505b50905060005b835181101561044157600060088660405161120a919061243b565b9081526020016040518091039020600086848151811061123d5760e060020a634e487b7102600052603260045260246000fd5b6020026020010151815260200190815260200160002054111561129457600082828151811061127f5760e060020a634e487b7102600052603260045260246000fd5b9115156020928302919091019091015261132a565b60018282815181106112b95760e060020a634e487b7102600052603260045260246000fd5b602002602001019015159081151581525050426008866040516112dc919061243b565b9081526020016040518091039020600086848151811061130f5760e060020a634e487b7102600052603260045260246000fd5b60200260200101518152602001908152602001600020819055505b8061133481612a20565b9150506111ef565b3360009081526001602052604090205460609060ff1680611375575061136061028d565b600160a060020a031633600160a060020a0316145b6113945760405160e560020a62461bcd0281526004016102f490612871565b6006846040516113a4919061243b565b9081526040519081900360200190206003015460ff610100909104166113df5760405160e560020a62461bcd0281526004016102f49061283a565b81518351146114035760405160e560020a62461bcd0281526004016102f4906128a8565b6000835167ffffffffffffffff8111156114305760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015611459578160200160208202803683370190505b50905060005b84518110156115895783818151811061148b5760e060020a634e487b7102600052603260045260246000fd5b60200260200101516009876040516114a3919061243b565b908152602001604051809103902060008784815181106114d65760e060020a634e487b7102600052603260045260246000fd5b602002602001015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002054141561154157600182828151811061152c5760e060020a634e487b7102600052603260045260246000fd5b91151560209283029190910190910152611577565b60008282815181106115665760e060020a634e487b7102600052603260045260246000fd5b911515602092830291909101909101525b8061158181612a20565b91505061145f565b50949350505050565b60075460609060009067ffffffffffffffff8111156115c45760e060020a634e487b7102600052604160045260246000fd5b6040519080825280602002602001820160405280156115fd57816020015b6115ea611fa3565b8152602001906001900390816115e25790505b50905060005b6007548110156110f0576006600782815481106116335760e060020a634e487b7102600052603260045260246000fd5b9060005260206000200160405161164a9190612457565b90815260200160405180910390206040518060a0016040529081600082018054611673906129e2565b80601f016020809104026020016040519081016040528092919081815260200182805461169f906129e2565b80156116ec5780601f106116c1576101008083540402835291602001916116ec565b820191906000526020600020905b8154815290600101906020018083116116cf57829003601f168201915b50505050508152602001600182018054611705906129e2565b80601f0160208091040260200160405190810160405280929190818152602001828054611731906129e2565b801561177e5780601f106117535761010080835404028352916020019161177e565b820191906000526020600020905b81548152906001019060200180831161176157829003601f168201915b50505050508152602001600282018054611797906129e2565b80601f01602080910402602001604051908101604052809291908181526020018280546117c3906129e2565b80156118105780601f106117e557610100808354040283529160200191611810565b820191906000526020600020905b8154815290600101906020018083116117f357829003601f168201915b50505091835250506003919091015460ff80821615156020840152610100909104161515604090910152825183908390811061185f5760e060020a634e487b7102600052603260045260246000fd5b6020026020010181905250808061187590612a20565b915050611603565b3360009081526001602052604090205460ff16806118b3575061189e61028d565b600160a060020a031633600160a060020a0316145b6118d25760405160e560020a62461bcd0281526004016102f490612871565b6006846040516118e2919061243b565b9081526040519081900360200190206003015460ff610100909104161561191e5760405160e560020a62461bcd0281526004016102f490612905565b6040518060a0016040528085815260200184815260200183815260200182151581526020016001151581525060068560405161195a919061243b565b90815260200160405180910390206000820151816000019080519060200190611984929190611ed0565b50602082810151805161199d9260018501920190611ed0565b50604082015180516119b9916002840191602090910190611ed0565b5060608201516003909101805460809093015115156101000261ff001992151560ff199094169390931791909116919091179055600780546001810182556000919091528451611a30917fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68801906020870190611ed0565b5050505050565b600054600160a060020a03163314611a645760405160e560020a62461bcd0281526004016102f4906127a6565b60008054604051600160a060020a03808516939216917f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73591a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b3360009081526001602052604090205460609060ff1680611b055750611af061028d565b600160a060020a031633600160a060020a0316145b611b245760405160e560020a62461bcd0281526004016102f490612871565b600684604051611b34919061243b565b9081526040519081900360200190206003015460ff61010090910416611b6f5760405160e560020a62461bcd0281526004016102f49061283a565b8151835114611b935760405160e560020a62461bcd0281526004016102f4906128a8565b6000835167ffffffffffffffff811115611bc05760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015611be9578160200160208202803683370190505b50905060005b845181101561158957600686604051611c08919061243b565b9081526040519081900360200190206003015460ff1615611cfb576001828281518110611c485760e060020a634e487b7102600052603260045260246000fd5b602002602001019015159081151581525050838181518110611c7d5760e060020a634e487b7102600052603260045260246000fd5b6020026020010151600987604051611c95919061243b565b90815260200160405180910390206000878481518110611cc85760e060020a634e487b7102600052603260045260246000fd5b602002602001015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002081905550611e7f565b6000600987604051611d0d919061243b565b90815260200160405180910390206000878481518110611d405760e060020a634e487b7102600052603260045260246000fd5b602002602001015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020541115611dab576000828281518110611d965760e060020a634e487b7102600052603260045260246000fd5b91151560209283029190910190910152611e7f565b6001828281518110611dd05760e060020a634e487b7102600052603260045260246000fd5b602002602001019015159081151581525050838181518110611e055760e060020a634e487b7102600052603260045260246000fd5b6020026020010151600987604051611e1d919061243b565b90815260200160405180910390206000878481518110611e505760e060020a634e487b7102600052603260045260246000fd5b602002602001015167ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020819055505b80611e8981612a20565b915050611bef565b508054611e9d906129e2565b6000825580601f10611eaf5750611ecd565b601f016020900490600052602060002090810190611ecd9190611fd6565b50565b828054611edc906129e2565b90600052602060002090601f016020900481019282611efe5760008555611f44565b82601f10611f1757805160ff1916838001178555611f44565b82800160010185558215611f44579182015b82811115611f44578251825591602001919060010190611f29565b50611f50929150611fd6565b5090565b6040518060600160405280600015158152602001606081526020016000151581525090565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b6040518060a001604052806060815260200160608152602001606081526020016000151581526020016000151581525090565b5b80821115611f505760008155600101611fd7565b8035600160a060020a03811681146108bf57600080fd5b600082601f830112612012578081fd5b8135602061202761202283612966565b61293c565b8281528181019085830183850287018401881015612043578586fd5b855b8581101561206157813584529284019290840190600101612045565b5090979650505050505050565b803580151581146108bf57600080fd5b600082601f83011261208e578081fd5b813567ffffffffffffffff8111156120a8576120a8612a78565b6120bb601f8201601f191660200161293c565b8181528460208386010111156120cf578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156120fa578081fd5b61210382611feb565b9392505050565b6000806040838503121561211c578081fd5b61212583611feb565b91506121336020840161206e565b90509250929050565b6000806040838503121561214e578182fd5b61215783611feb565b9150602083013567ffffffffffffffff811115612172578182fd5b61217e8582860161207e565b9150509250929050565b600060208284031215612199578081fd5b813567ffffffffffffffff8111156121af578182fd5b6121bb8482850161207e565b949350505050565b600080604083850312156121d5578182fd5b823567ffffffffffffffff808211156121ec578384fd5b6121f88683870161207e565b9350602085013591508082111561220d578283fd5b5061217e85828601612002565b60008060006060848603121561222e578081fd5b833567ffffffffffffffff80821115612245578283fd5b6122518783880161207e565b9450602091508186013581811115612267578384fd5b8601601f81018813612277578384fd5b803561228561202282612966565b81815284810190838601868402850187018c10156122a1578788fd5b8794505b838510156122d057803586811681146122bc578889fd5b8352600194909401939186019186016122a5565b50965050505060408601359150808211156122e9578283fd5b506122f686828701612002565b9150509250925092565b600080600060608486031215612314578283fd5b833567ffffffffffffffff8082111561232b578485fd5b6123378783880161207e565b9450602086013591508082111561234c578384fd5b6123588783880161207e565b9350604086013591508082111561236d578283fd5b506122f68682870161207e565b6000806000806080858703121561238f578081fd5b843567ffffffffffffffff808211156123a6578283fd5b6123b28883890161207e565b955060208701359150808211156123c7578283fd5b6123d38883890161207e565b945060408701359150808211156123e8578283fd5b506123f58782880161207e565b9250506124046060860161206e565b905092959194509250565b60008151808452612427816020860160208601612996565b601f01601f19169290920160200192915050565b6000825161244d818460208701612996565b9190910192915050565b815460009081906002810460018083168061247357607f831692505b60208084108214156124965760e060020a634e487b710287526022600452602487fd5b8180156124aa57600181146124bb576124e7565b60ff198616895284890196506124e7565b6124c48a61298a565b885b868110156124df5781548b8201529085019083016124c6565b505084890196505b509498975050505050505050565b600160a060020a0391909116815260200190565b6040808252835182820181905260009190606090818501906020808901865b8381101561254d578151600160a060020a031685529382019390820190600101612528565b5050868303818801528751808452818401925080820284018201898301885b838110156125b957601f19878403018652815180511515845285810151898786015261259a8a86018261240f565b918b01511515948b01949094529585019592509084019060010161256c565b50909b9a5050505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156126045783511515835292840192918401916001016125e6565b50909695505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156126ad57603f1989840301855281516080815181865261265a8287018261240f565b915050888201518582038a870152612672828261240f565b915050878201518582038987015261268a828261240f565b606093840151151596909301959095525094870194925090860190600101612634565b509098975050505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156126ad57603f19898403018552815160a081518186526127058287018261240f565b915050888201518582038a87015261271d828261240f565b9150508782015185820389870152612735828261240f565b60608481015115159088015260809384015115159390960192909252505093860193908601906001016126df565b6020808252825182820181905260009190848201906040850190845b818110156126045783518352928401929184019160010161277f565b901515815260200190565b60208082526013908201527f43616c6c6572206973206e6f74206f776e657200000000000000000000000000604082015260600190565b60208082526024908201527f63616e6e6f74206368616e676520696e666f206f662061646d696e20696e207560408201527f73696e6700000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526012908201527f746f706963206973206e6f742065786973740000000000000000000000000000604082015260600190565b60208082526013908201527f43616c6c6572206973206e6f742061646d696e00000000000000000000000000604082015260600190565b60208082526024908201527f746865206c656e67746873206f66207468652074776f2061726520646966666560408201527f72656e7400000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f746f70696320697320616c726561647920657869737400000000000000000000604082015260600190565b60405181810167ffffffffffffffff8111828210171561295e5761295e612a78565b604052919050565b600067ffffffffffffffff82111561298057612980612a78565b5060209081020190565b60009081526020902090565b60005b838110156129b1578181015183820152602001612999565b8381111561072f5750506000910152565b600063ffffffff8216806129d8576129d8612a5f565b6000190192915050565b6002810460018216806129f657607f821691505b60208210811415612a1a5760e060020a634e487b7102600052602260045260246000fd5b50919050565b6000600019821415612a3457612a34612a5f565b5060010190565b600063ffffffff80831681811415612a5557612a55612a5f565b6001019392505050565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052604160045260246000fdfea2646970667358221220e5035261de4ac3628c54a2c095e0fb57269f78bfdb498cb57744a78167e16f1964736f6c63430008000033",
}

// DataFinABI is the input ABI used to generate the binding from.
// Deprecated: Use DataFinMetaData.ABI instead.
var DataFinABI = DataFinMetaData.ABI

// DataFinBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use DataFinMetaData.Bin instead.
var DataFinBin = DataFinMetaData.Bin

// DeployDataFin deploys a new Ethereum contract, binding an instance of DataFin to it.
func DeployDataFin(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *DataFin, error) {
	parsed, err := DataFinMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(DataFinBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &DataFin{DataFinCaller: DataFinCaller{contract: contract}, DataFinTransactor: DataFinTransactor{contract: contract}, DataFinFilterer: DataFinFilterer{contract: contract}}, nil
}

// DataFin is an auto generated Go binding around an Ethereum contract.
type DataFin struct {
	DataFinCaller     // Read-only binding to the contract
	DataFinTransactor // Write-only binding to the contract
	DataFinFilterer   // Log filterer for contract events
}

// DataFinCaller is an auto generated read-only Go binding around an Ethereum contract.
type DataFinCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DataFinTransactor is an auto generated write-only Go binding around an Ethereum contract.
type DataFinTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DataFinFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type DataFinFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DataFinSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type DataFinSession struct {
	Contract     *DataFin          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DataFinCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type DataFinCallerSession struct {
	Contract *DataFinCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// DataFinTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type DataFinTransactorSession struct {
	Contract     *DataFinTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// DataFinRaw is an auto generated low-level Go binding around an Ethereum contract.
type DataFinRaw struct {
	Contract *DataFin // Generic contract binding to access the raw methods on
}

// DataFinCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type DataFinCallerRaw struct {
	Contract *DataFinCaller // Generic read-only contract binding to access the raw methods on
}

// DataFinTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type DataFinTransactorRaw struct {
	Contract *DataFinTransactor // Generic write-only contract binding to access the raw methods on
}

// NewDataFin creates a new instance of DataFin, bound to a specific deployed contract.
func NewDataFin(address common.Address, backend bind.ContractBackend) (*DataFin, error) {
	contract, err := bindDataFin(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &DataFin{DataFinCaller: DataFinCaller{contract: contract}, DataFinTransactor: DataFinTransactor{contract: contract}, DataFinFilterer: DataFinFilterer{contract: contract}}, nil
}

// NewDataFinCaller creates a new read-only instance of DataFin, bound to a specific deployed contract.
func NewDataFinCaller(address common.Address, caller bind.ContractCaller) (*DataFinCaller, error) {
	contract, err := bindDataFin(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &DataFinCaller{contract: contract}, nil
}

// NewDataFinTransactor creates a new write-only instance of DataFin, bound to a specific deployed contract.
func NewDataFinTransactor(address common.Address, transactor bind.ContractTransactor) (*DataFinTransactor, error) {
	contract, err := bindDataFin(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &DataFinTransactor{contract: contract}, nil
}

// NewDataFinFilterer creates a new log filterer instance of DataFin, bound to a specific deployed contract.
func NewDataFinFilterer(address common.Address, filterer bind.ContractFilterer) (*DataFinFilterer, error) {
	contract, err := bindDataFin(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &DataFinFilterer{contract: contract}, nil
}

// bindDataFin binds a generic wrapper to an already deployed contract.
func bindDataFin(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(DataFinABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_DataFin *DataFinRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _DataFin.Contract.DataFinCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_DataFin *DataFinRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DataFin.Contract.DataFinTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_DataFin *DataFinRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _DataFin.Contract.DataFinTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_DataFin *DataFinCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _DataFin.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_DataFin *DataFinTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DataFin.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_DataFin *DataFinTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _DataFin.Contract.contract.Transact(opts, method, params...)
}

// GetAdminInfos is a free data retrieval call binding the contract method 0x39f19d71.
//
// Solidity: function GetAdminInfos() view returns(address[], (bool,string,bool)[])
func (_DataFin *DataFinCaller) GetAdminInfos(opts *bind.CallOpts) ([]common.Address, []AdminAdminInfo, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetAdminInfos")

	if err != nil {
		return *new([]common.Address), *new([]AdminAdminInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	out1 := *abi.ConvertType(out[1], new([]AdminAdminInfo)).(*[]AdminAdminInfo)

	return out0, out1, err

}

// GetAdminInfos is a free data retrieval call binding the contract method 0x39f19d71.
//
// Solidity: function GetAdminInfos() view returns(address[], (bool,string,bool)[])
func (_DataFin *DataFinSession) GetAdminInfos() ([]common.Address, []AdminAdminInfo, error) {
	return _DataFin.Contract.GetAdminInfos(&_DataFin.CallOpts)
}

// GetAdminInfos is a free data retrieval call binding the contract method 0x39f19d71.
//
// Solidity: function GetAdminInfos() view returns(address[], (bool,string,bool)[])
func (_DataFin *DataFinCallerSession) GetAdminInfos() ([]common.Address, []AdminAdminInfo, error) {
	return _DataFin.Contract.GetAdminInfos(&_DataFin.CallOpts)
}

// GetIDTopics is a free data retrieval call binding the contract method 0x93d721ca.
//
// Solidity: function GetIDTopics() view returns((string,string,string,bool,bool)[])
func (_DataFin *DataFinCaller) GetIDTopics(opts *bind.CallOpts) ([]DataFinIDFinInfo, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetIDTopics")

	if err != nil {
		return *new([]DataFinIDFinInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]DataFinIDFinInfo)).(*[]DataFinIDFinInfo)

	return out0, err

}

// GetIDTopics is a free data retrieval call binding the contract method 0x93d721ca.
//
// Solidity: function GetIDTopics() view returns((string,string,string,bool,bool)[])
func (_DataFin *DataFinSession) GetIDTopics() ([]DataFinIDFinInfo, error) {
	return _DataFin.Contract.GetIDTopics(&_DataFin.CallOpts)
}

// GetIDTopics is a free data retrieval call binding the contract method 0x93d721ca.
//
// Solidity: function GetIDTopics() view returns((string,string,string,bool,bool)[])
func (_DataFin *DataFinCallerSession) GetIDTopics() ([]DataFinIDFinInfo, error) {
	return _DataFin.Contract.GetIDTopics(&_DataFin.CallOpts)
}

// GetOwner is a free data retrieval call binding the contract method 0x0ae50a39.
//
// Solidity: function GetOwner() view returns(address)
func (_DataFin *DataFinCaller) GetOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetOwner is a free data retrieval call binding the contract method 0x0ae50a39.
//
// Solidity: function GetOwner() view returns(address)
func (_DataFin *DataFinSession) GetOwner() (common.Address, error) {
	return _DataFin.Contract.GetOwner(&_DataFin.CallOpts)
}

// GetOwner is a free data retrieval call binding the contract method 0x0ae50a39.
//
// Solidity: function GetOwner() view returns(address)
func (_DataFin *DataFinCallerSession) GetOwner() (common.Address, error) {
	return _DataFin.Contract.GetOwner(&_DataFin.CallOpts)
}

// GetTopics is a free data retrieval call binding the contract method 0x5f0ffbff.
//
// Solidity: function GetTopics() view returns((string,string,string,bool)[])
func (_DataFin *DataFinCaller) GetTopics(opts *bind.CallOpts) ([]DataFinFinInfo, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetTopics")

	if err != nil {
		return *new([]DataFinFinInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]DataFinFinInfo)).(*[]DataFinFinInfo)

	return out0, err

}

// GetTopics is a free data retrieval call binding the contract method 0x5f0ffbff.
//
// Solidity: function GetTopics() view returns((string,string,string,bool)[])
func (_DataFin *DataFinSession) GetTopics() ([]DataFinFinInfo, error) {
	return _DataFin.Contract.GetTopics(&_DataFin.CallOpts)
}

// GetTopics is a free data retrieval call binding the contract method 0x5f0ffbff.
//
// Solidity: function GetTopics() view returns((string,string,string,bool)[])
func (_DataFin *DataFinCallerSession) GetTopics() ([]DataFinFinInfo, error) {
	return _DataFin.Contract.GetTopics(&_DataFin.CallOpts)
}

// IsAdminEnable is a free data retrieval call binding the contract method 0x43672d61.
//
// Solidity: function IsAdminEnable(address admin) view returns(bool)
func (_DataFin *DataFinCaller) IsAdminEnable(opts *bind.CallOpts, admin common.Address) (bool, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "IsAdminEnable", admin)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAdminEnable is a free data retrieval call binding the contract method 0x43672d61.
//
// Solidity: function IsAdminEnable(address admin) view returns(bool)
func (_DataFin *DataFinSession) IsAdminEnable(admin common.Address) (bool, error) {
	return _DataFin.Contract.IsAdminEnable(&_DataFin.CallOpts, admin)
}

// IsAdminEnable is a free data retrieval call binding the contract method 0x43672d61.
//
// Solidity: function IsAdminEnable(address admin) view returns(bool)
func (_DataFin *DataFinCallerSession) IsAdminEnable(admin common.Address) (bool, error) {
	return _DataFin.Contract.IsAdminEnable(&_DataFin.CallOpts, admin)
}

// VerifyIDItems is a free data retrieval call binding the contract method 0x74a94c40.
//
// Solidity: function VerifyIDItems(string topicID, uint64[] ids, uint256[] vals) view returns(bool[])
func (_DataFin *DataFinCaller) VerifyIDItems(opts *bind.CallOpts, topicID string, ids []uint64, vals []*big.Int) ([]bool, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "VerifyIDItems", topicID, ids, vals)

	if err != nil {
		return *new([]bool), err
	}

	out0 := *abi.ConvertType(out[0], new([]bool)).(*[]bool)

	return out0, err

}

// VerifyIDItems is a free data retrieval call binding the contract method 0x74a94c40.
//
// Solidity: function VerifyIDItems(string topicID, uint64[] ids, uint256[] vals) view returns(bool[])
func (_DataFin *DataFinSession) VerifyIDItems(topicID string, ids []uint64, vals []*big.Int) ([]bool, error) {
	return _DataFin.Contract.VerifyIDItems(&_DataFin.CallOpts, topicID, ids, vals)
}

// VerifyIDItems is a free data retrieval call binding the contract method 0x74a94c40.
//
// Solidity: function VerifyIDItems(string topicID, uint64[] ids, uint256[] vals) view returns(bool[])
func (_DataFin *DataFinCallerSession) VerifyIDItems(topicID string, ids []uint64, vals []*big.Int) ([]bool, error) {
	return _DataFin.Contract.VerifyIDItems(&_DataFin.CallOpts, topicID, ids, vals)
}

// VerifyItems is a free data retrieval call binding the contract method 0x1329be2e.
//
// Solidity: function VerifyItems(string topicID, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinCaller) VerifyItems(opts *bind.CallOpts, topicID string, vals []*big.Int) ([]*big.Int, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "VerifyItems", topicID, vals)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// VerifyItems is a free data retrieval call binding the contract method 0x1329be2e.
//
// Solidity: function VerifyItems(string topicID, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinSession) VerifyItems(topicID string, vals []*big.Int) ([]*big.Int, error) {
	return _DataFin.Contract.VerifyItems(&_DataFin.CallOpts, topicID, vals)
}

// VerifyItems is a free data retrieval call binding the contract method 0x1329be2e.
//
// Solidity: function VerifyItems(string topicID, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinCallerSession) VerifyItems(topicID string, vals []*big.Int) ([]*big.Int, error) {
	return _DataFin.Contract.VerifyItems(&_DataFin.CallOpts, topicID, vals)
}

// Version is a free data retrieval call binding the contract method 0x2d8e3250.
//
// Solidity: function Version(string _version) view returns(bool ret)
func (_DataFin *DataFinCaller) Version(opts *bind.CallOpts, _version string) (bool, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "Version", _version)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x2d8e3250.
//
// Solidity: function Version(string _version) view returns(bool ret)
func (_DataFin *DataFinSession) Version(_version string) (bool, error) {
	return _DataFin.Contract.Version(&_DataFin.CallOpts, _version)
}

// Version is a free data retrieval call binding the contract method 0x2d8e3250.
//
// Solidity: function Version(string _version) view returns(bool ret)
func (_DataFin *DataFinCallerSession) Version(_version string) (bool, error) {
	return _DataFin.Contract.Version(&_DataFin.CallOpts, _version)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x3561247d.
//
// Solidity: function AddAdmin(address admin, string info) returns()
func (_DataFin *DataFinTransactor) AddAdmin(opts *bind.TransactOpts, admin common.Address, info string) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "AddAdmin", admin, info)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x3561247d.
//
// Solidity: function AddAdmin(address admin, string info) returns()
func (_DataFin *DataFinSession) AddAdmin(admin common.Address, info string) (*types.Transaction, error) {
	return _DataFin.Contract.AddAdmin(&_DataFin.TransactOpts, admin, info)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x3561247d.
//
// Solidity: function AddAdmin(address admin, string info) returns()
func (_DataFin *DataFinTransactorSession) AddAdmin(admin common.Address, info string) (*types.Transaction, error) {
	return _DataFin.Contract.AddAdmin(&_DataFin.TransactOpts, admin, info)
}

// AddIDsItems is a paid mutator transaction binding the contract method 0xf28c12d5.
//
// Solidity: function AddIDsItems(string topicID, uint64[] ids, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactor) AddIDsItems(opts *bind.TransactOpts, topicID string, ids []uint64, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "AddIDsItems", topicID, ids, vals)
}

// AddIDsItems is a paid mutator transaction binding the contract method 0xf28c12d5.
//
// Solidity: function AddIDsItems(string topicID, uint64[] ids, uint256[] vals) returns(bool[])
func (_DataFin *DataFinSession) AddIDsItems(topicID string, ids []uint64, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddIDsItems(&_DataFin.TransactOpts, topicID, ids, vals)
}

// AddIDsItems is a paid mutator transaction binding the contract method 0xf28c12d5.
//
// Solidity: function AddIDsItems(string topicID, uint64[] ids, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactorSession) AddIDsItems(topicID string, ids []uint64, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddIDsItems(&_DataFin.TransactOpts, topicID, ids, vals)
}

// AddItems is a paid mutator transaction binding the contract method 0x6ca1438b.
//
// Solidity: function AddItems(string topicID, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactor) AddItems(opts *bind.TransactOpts, topicID string, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "AddItems", topicID, vals)
}

// AddItems is a paid mutator transaction binding the contract method 0x6ca1438b.
//
// Solidity: function AddItems(string topicID, uint256[] vals) returns(bool[])
func (_DataFin *DataFinSession) AddItems(topicID string, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddItems(&_DataFin.TransactOpts, topicID, vals)
}

// AddItems is a paid mutator transaction binding the contract method 0x6ca1438b.
//
// Solidity: function AddItems(string topicID, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactorSession) AddItems(topicID string, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddItems(&_DataFin.TransactOpts, topicID, vals)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xf2853292.
//
// Solidity: function ChangeOwner(address newOwner) returns()
func (_DataFin *DataFinTransactor) ChangeOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "ChangeOwner", newOwner)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xf2853292.
//
// Solidity: function ChangeOwner(address newOwner) returns()
func (_DataFin *DataFinSession) ChangeOwner(newOwner common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.ChangeOwner(&_DataFin.TransactOpts, newOwner)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xf2853292.
//
// Solidity: function ChangeOwner(address newOwner) returns()
func (_DataFin *DataFinTransactorSession) ChangeOwner(newOwner common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.ChangeOwner(&_DataFin.TransactOpts, newOwner)
}

// CreateIDTopic is a paid mutator transaction binding the contract method 0xd3ef0d24.
//
// Solidity: function CreateIDTopic(string topicID, string name, string info, bool changeAble) returns()
func (_DataFin *DataFinTransactor) CreateIDTopic(opts *bind.TransactOpts, topicID string, name string, info string, changeAble bool) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "CreateIDTopic", topicID, name, info, changeAble)
}

// CreateIDTopic is a paid mutator transaction binding the contract method 0xd3ef0d24.
//
// Solidity: function CreateIDTopic(string topicID, string name, string info, bool changeAble) returns()
func (_DataFin *DataFinSession) CreateIDTopic(topicID string, name string, info string, changeAble bool) (*types.Transaction, error) {
	return _DataFin.Contract.CreateIDTopic(&_DataFin.TransactOpts, topicID, name, info, changeAble)
}

// CreateIDTopic is a paid mutator transaction binding the contract method 0xd3ef0d24.
//
// Solidity: function CreateIDTopic(string topicID, string name, string info, bool changeAble) returns()
func (_DataFin *DataFinTransactorSession) CreateIDTopic(topicID string, name string, info string, changeAble bool) (*types.Transaction, error) {
	return _DataFin.Contract.CreateIDTopic(&_DataFin.TransactOpts, topicID, name, info, changeAble)
}

// CreateTopic is a paid mutator transaction binding the contract method 0x1f2c3df6.
//
// Solidity: function CreateTopic(string topicID, string name, string info) returns()
func (_DataFin *DataFinTransactor) CreateTopic(opts *bind.TransactOpts, topicID string, name string, info string) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "CreateTopic", topicID, name, info)
}

// CreateTopic is a paid mutator transaction binding the contract method 0x1f2c3df6.
//
// Solidity: function CreateTopic(string topicID, string name, string info) returns()
func (_DataFin *DataFinSession) CreateTopic(topicID string, name string, info string) (*types.Transaction, error) {
	return _DataFin.Contract.CreateTopic(&_DataFin.TransactOpts, topicID, name, info)
}

// CreateTopic is a paid mutator transaction binding the contract method 0x1f2c3df6.
//
// Solidity: function CreateTopic(string topicID, string name, string info) returns()
func (_DataFin *DataFinTransactorSession) CreateTopic(topicID string, name string, info string) (*types.Transaction, error) {
	return _DataFin.Contract.CreateTopic(&_DataFin.TransactOpts, topicID, name, info)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x1af6bd3d.
//
// Solidity: function DeleteAdmin(address admin) returns()
func (_DataFin *DataFinTransactor) DeleteAdmin(opts *bind.TransactOpts, admin common.Address) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "DeleteAdmin", admin)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x1af6bd3d.
//
// Solidity: function DeleteAdmin(address admin) returns()
func (_DataFin *DataFinSession) DeleteAdmin(admin common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.DeleteAdmin(&_DataFin.TransactOpts, admin)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x1af6bd3d.
//
// Solidity: function DeleteAdmin(address admin) returns()
func (_DataFin *DataFinTransactorSession) DeleteAdmin(admin common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.DeleteAdmin(&_DataFin.TransactOpts, admin)
}

// SetEnableAdmin is a paid mutator transaction binding the contract method 0x4e553263.
//
// Solidity: function SetEnableAdmin(address admin, bool enable) returns()
func (_DataFin *DataFinTransactor) SetEnableAdmin(opts *bind.TransactOpts, admin common.Address, enable bool) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "SetEnableAdmin", admin, enable)
}

// SetEnableAdmin is a paid mutator transaction binding the contract method 0x4e553263.
//
// Solidity: function SetEnableAdmin(address admin, bool enable) returns()
func (_DataFin *DataFinSession) SetEnableAdmin(admin common.Address, enable bool) (*types.Transaction, error) {
	return _DataFin.Contract.SetEnableAdmin(&_DataFin.TransactOpts, admin, enable)
}

// SetEnableAdmin is a paid mutator transaction binding the contract method 0x4e553263.
//
// Solidity: function SetEnableAdmin(address admin, bool enable) returns()
func (_DataFin *DataFinTransactorSession) SetEnableAdmin(admin common.Address, enable bool) (*types.Transaction, error) {
	return _DataFin.Contract.SetEnableAdmin(&_DataFin.TransactOpts, admin, enable)
}

// DataFinDataFinCreateIterator is returned from FilterDataFinCreate and is used to iterate over the raw logs and unpacked data for DataFinCreate events raised by the DataFin contract.
type DataFinDataFinCreateIterator struct {
	Event *DataFinDataFinCreate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DataFinDataFinCreateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DataFinDataFinCreate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DataFinDataFinCreate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DataFinDataFinCreateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DataFinDataFinCreateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DataFinDataFinCreate represents a DataFinCreate event raised by the DataFin contract.
type DataFinDataFinCreate struct {
	Cteator common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterDataFinCreate is a free log retrieval operation binding the contract event 0x7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a1.
//
// Solidity: event DataFinCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) FilterDataFinCreate(opts *bind.FilterOpts, cteator []common.Address) (*DataFinDataFinCreateIterator, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.FilterLogs(opts, "DataFinCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return &DataFinDataFinCreateIterator{contract: _DataFin.contract, event: "DataFinCreate", logs: logs, sub: sub}, nil
}

// WatchDataFinCreate is a free log subscription operation binding the contract event 0x7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a1.
//
// Solidity: event DataFinCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) WatchDataFinCreate(opts *bind.WatchOpts, sink chan<- *DataFinDataFinCreate, cteator []common.Address) (event.Subscription, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.WatchLogs(opts, "DataFinCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DataFinDataFinCreate)
				if err := _DataFin.contract.UnpackLog(event, "DataFinCreate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDataFinCreate is a log parse operation binding the contract event 0x7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a1.
//
// Solidity: event DataFinCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) ParseDataFinCreate(log types.Log) (*DataFinDataFinCreate, error) {
	event := new(DataFinDataFinCreate)
	if err := _DataFin.contract.UnpackLog(event, "DataFinCreate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// DataFinOwnerSetIterator is returned from FilterOwnerSet and is used to iterate over the raw logs and unpacked data for OwnerSet events raised by the DataFin contract.
type DataFinOwnerSetIterator struct {
	Event *DataFinOwnerSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DataFinOwnerSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DataFinOwnerSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DataFinOwnerSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DataFinOwnerSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DataFinOwnerSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DataFinOwnerSet represents a OwnerSet event raised by the DataFin contract.
type DataFinOwnerSet struct {
	OldOwner common.Address
	NewOwner common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterOwnerSet is a free log retrieval operation binding the contract event 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735.
//
// Solidity: event OwnerSet(address indexed oldOwner, address indexed newOwner)
func (_DataFin *DataFinFilterer) FilterOwnerSet(opts *bind.FilterOpts, oldOwner []common.Address, newOwner []common.Address) (*DataFinOwnerSetIterator, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _DataFin.contract.FilterLogs(opts, "OwnerSet", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &DataFinOwnerSetIterator{contract: _DataFin.contract, event: "OwnerSet", logs: logs, sub: sub}, nil
}

// WatchOwnerSet is a free log subscription operation binding the contract event 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735.
//
// Solidity: event OwnerSet(address indexed oldOwner, address indexed newOwner)
func (_DataFin *DataFinFilterer) WatchOwnerSet(opts *bind.WatchOpts, sink chan<- *DataFinOwnerSet, oldOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _DataFin.contract.WatchLogs(opts, "OwnerSet", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DataFinOwnerSet)
				if err := _DataFin.contract.UnpackLog(event, "OwnerSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnerSet is a log parse operation binding the contract event 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735.
//
// Solidity: event OwnerSet(address indexed oldOwner, address indexed newOwner)
func (_DataFin *DataFinFilterer) ParseOwnerSet(log types.Log) (*DataFinOwnerSet, error) {
	event := new(DataFinOwnerSet)
	if err := _DataFin.contract.UnpackLog(event, "OwnerSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// DataFinTopicCreateIterator is returned from FilterTopicCreate and is used to iterate over the raw logs and unpacked data for TopicCreate events raised by the DataFin contract.
type DataFinTopicCreateIterator struct {
	Event *DataFinTopicCreate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DataFinTopicCreateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DataFinTopicCreate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DataFinTopicCreate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DataFinTopicCreateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DataFinTopicCreateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DataFinTopicCreate represents a TopicCreate event raised by the DataFin contract.
type DataFinTopicCreate struct {
	Cteator common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTopicCreate is a free log retrieval operation binding the contract event 0x72105a12ab9207bcb8946651910fa8191ca61842cf424a6482bab67f111b9eb2.
//
// Solidity: event TopicCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) FilterTopicCreate(opts *bind.FilterOpts, cteator []common.Address) (*DataFinTopicCreateIterator, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.FilterLogs(opts, "TopicCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return &DataFinTopicCreateIterator{contract: _DataFin.contract, event: "TopicCreate", logs: logs, sub: sub}, nil
}

// WatchTopicCreate is a free log subscription operation binding the contract event 0x72105a12ab9207bcb8946651910fa8191ca61842cf424a6482bab67f111b9eb2.
//
// Solidity: event TopicCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) WatchTopicCreate(opts *bind.WatchOpts, sink chan<- *DataFinTopicCreate, cteator []common.Address) (event.Subscription, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.WatchLogs(opts, "TopicCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DataFinTopicCreate)
				if err := _DataFin.contract.UnpackLog(event, "TopicCreate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTopicCreate is a log parse operation binding the contract event 0x72105a12ab9207bcb8946651910fa8191ca61842cf424a6482bab67f111b9eb2.
//
// Solidity: event TopicCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) ParseTopicCreate(log types.Log) (*DataFinTopicCreate, error) {
	event := new(DataFinTopicCreate)
	if err := _DataFin.contract.UnpackLog(event, "TopicCreate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
