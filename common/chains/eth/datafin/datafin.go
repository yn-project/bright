// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package data_fin

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/Vigo-Tea/go-ethereum-ant"
	"github.com/Vigo-Tea/go-ethereum-ant/accounts/abi"
	"github.com/Vigo-Tea/go-ethereum-ant/accounts/abi/bind"
	"github.com/Vigo-Tea/go-ethereum-ant/common"
	"github.com/Vigo-Tea/go-ethereum-ant/core/types"
	"github.com/Vigo-Tea/go-ethereum-ant/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// AdminAdminInfo is an auto generated low-level Go binding around an user-defined struct.
type AdminAdminInfo struct {
	Enable  bool
	Info    string
	IsValid bool
}

// DataFinFinInfo is an auto generated low-level Go binding around an user-defined struct.
type DataFinFinInfo struct {
	ID      string
	Name    string
	Info    string
	IsValid bool
}

// DataFinIDFinInfo is an auto generated low-level Go binding around an user-defined struct.
type DataFinIDFinInfo struct {
	ID         string
	Name       string
	Info       string
	ChangeAble bool
	IsValid    bool
}

// DataFinMetaData contains all meta data concerning the DataFin contract.
var DataFinMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cteator\",\"type\":\"address\"}],\"name\":\"DataFinCreate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cteator\",\"type\":\"address\"}],\"name\":\"TopicCreate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"AddAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"string[]\",\"name\":\"ids\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"AddIDsItems\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"AddItems\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"ChangeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"changeAble\",\"type\":\"bool\"}],\"name\":\"CreateIDTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"}],\"name\":\"CreateTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"DeleteAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetAdminInfos\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"structAdmin.AdminInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetIDTopics\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"ID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"ChangeAble\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"structDataFin.IDFinInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetTopics\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"ID\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"Info\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"internalType\":\"structDataFin.FinInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"IsAdminEnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"SetEnableAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"ids\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"VerifyIDItems\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"topicID\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"vals\",\"type\":\"uint256[]\"}],\"name\":\"VerifyItems\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"name\":\"Version\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"ret\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60c0604052601f60808190527f4461746146696e2d76312e322e302d776974682d41646d696e2d4f776e65720060a09081526200004091600b9190620001ec565b503480156200004e57600080fd5b5060008054600160a060020a0319163317808255604051600160a060020a039190911691907f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735908290a360408051606081018252600180825282518084018452600a81527f726f6f742061646d696e00000000000000000000000000000000000000000000602080830191909152808401918252838501839052336000908152838252949094208351815460ff191690151517815590518051939491936200011e938501929190910190620001ec565b50604091909101516002918201805491151560ff19909216919091179055805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054600160a060020a031916331790556003805463ffffffff16916200019183620002e8565b91906101000a81548163ffffffff021916908363ffffffff1602179055505033600160a060020a03167f7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a160405160405180910390a262000332565b828054620001fa9062000292565b90600052602060002090601f0160209004810192826200021e576000855562000269565b82601f106200023957805160ff191683800117855562000269565b8280016001018555821562000269579182015b82811115620002695782518255916020019190600101906200024c565b50620002779291506200027b565b5090565b5b808211156200027757600081556001016200027c565b600281046001821680620002a757607f821691505b60208210811415620002e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b600063ffffffff8083168181141562000328577f4e487b710000000000000000000000000000000000000000000000000000000083526011600452602483fd5b6001019392505050565b612e0980620003426000396000f3fe608060405234801561001057600080fd5b506004361061011d576000357c0100000000000000000000000000000000000000000000000000000000900480634d739783116100b45780636ffc46c3116100835780636ffc46c31461023f57806393d721ca14610252578063d3ef0d2414610267578063f28532921461027a5761011d565b80634d739783146101e45780634e553263146102045780634fd0ee45146102175780635f0ffbff1461022a5761011d565b80632d8e3250116100f05780632d8e3250146101885780633561247d146101a857806339f19d71146101bb57806343672d61146101d15761011d565b80630ae50a39146101225780631329be2e146101405780631af6bd3d146101605780631f2c3df614610175575b600080fd5b61012a61028d565b60405161013791906127a3565b60405180910390f35b61015361014e36600461247d565b61029c565b6040516101379190612a11565b61017361016e36600461231f565b61045f565b005b6101736101833660046124d4565b6105f6565b61019b6101963660046123be565b610789565b6040516101379190612a49565b6101736101b6366004612372565b610918565b6101c3610a82565b6040516101379291906127b7565b61019b6101df36600461231f565b610df3565b6101f76101f2366004612678565b610e11565b6040516101379190612878565b610173610212366004612340565b611084565b6101536102253660046123f9565b61111a565b61023261138f565b60405161013791906128be565b6101f761024d3660046125e3565b611670565b61025a611b24565b6040516101379190612969565b61017361027536600461254e565b611e0f565b61017361028836600461231f565b611fc9565b600054600160a060020a031690565b3360009081526001602052604090205460609060ff16806102d557506102c061028d565b600160a060020a031633600160a060020a0316145b6102fd5760405160e560020a62461bcd0281526004016102f490612b56565b60405180910390fd5b60048360405161030d91906126e9565b9081526040519081900360200190206003015460ff166103425760405160e560020a62461bcd0281526004016102f490612b1f565b6000825167ffffffffffffffff81111561036f5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610398578160200160208202803683370190505b50905060005b8351811015610457576008856040516103b791906126e9565b908152602001604051809103902060008583815181106103ea5760e060020a634e487b7102600052603260045260246000fd5b6020026020010151815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1682828151811061043a5760e060020a634e487b7102600052603260045260246000fd5b60209081029190910101528061044f81612d62565b91505061039e565b509392505050565b600054600160a060020a0316331461048c5760405160e560020a62461bcd0281526004016102f490612a54565b600160a060020a03811660009081526001602052604090206002015460ff166104ca5760405160e560020a62461bcd0281526004016102f490612ae8565b600160a060020a03811660009081526001602081905260408220805460ff1916815591906104fa9083018261205e565b50600201805460ff191690556003805463ffffffff1690600061051c83612d04565b91906101000a81548163ffffffff021916908363ffffffff1602179055505060005b6002548110156105f2576002818154811061056c5760e060020a634e487b7102600052603260045260246000fd5b600091825260209091200154600160a060020a03838116911614156105e0576000600282815481106105b15760e060020a634e487b7102600052603260045260246000fd5b9060005260206000200160006101000a815481600160a060020a030219169083600160a060020a031602179055505b806105ea81612d62565b91505061053e565b5050565b3360009081526001602052604090205460ff168061062c575061061761028d565b600160a060020a031633600160a060020a0316145b61064b5760405160e560020a62461bcd0281526004016102f490612b56565b60048360405161065b91906126e9565b9081526040519081900360200190206003015460ff16156106915760405160e560020a62461bcd0281526004016102f490612c47565b6040518060800160405280848152602001838152602001828152602001600115158152506004846040516106c591906126e9565b908152602001604051809103902060008201518160000190805190602001906106ef92919061209d565b506020828101518051610708926001850192019061209d565b506040820151805161072491600284019160209091019061209d565b50606091909101516003909101805460ff1916911515919091179055600580546001810182556000919091528351610783917f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00190602086019061209d565b50505050565b6000808290506000600b805461079e90612d24565b80601f01602080910402602001604051908101604052809291908181526020018280546107ca90612d24565b80156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b50505050509050805182511461083257600092505050610913565b60005b825181101561090f578181815181106108615760e060020a634e487b7102600052603260045260246000fd5b602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168382815181106108b85760e060020a634e487b7102600052603260045260246000fd5b602001015160f860020a900460f860020a027effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146108fd5760009350505050610913565b8061090781612d62565b915050610835565b5050505b919050565b600054600160a060020a031633146109455760405160e560020a62461bcd0281526004016102f490612a54565b600160a060020a03821660009081526001602052604090205460ff16156109815760405160e560020a62461bcd0281526004016102f490612a8b565b6040805160608101825260018082526020808301858152838501839052600160a060020a0387166000908152838352949094208351815460ff1916901515178155935180519394936109da93850192919091019061209d565b50604091909101516002918201805460ff1916911515919091179055805460018101825560009182527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace01805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0385161790556003805463ffffffff1691610a5f83612d7d565b91906101000a81548163ffffffff021916908363ffffffff160217905550505050565b600354606090819060009063ffffffff1667ffffffffffffffff811115610abc5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610af557816020015b610ae2612121565b815260200190600190039081610ada5790505b5060035490915060009063ffffffff1667ffffffffffffffff811115610b2e5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610b57578160200160208202803683370190505b5090506000805b600254811015610de7576000600160a060020a031660028281548110610b975760e060020a634e487b7102600052603260045260246000fd5b600091825260209091200154600160a060020a03161415610bb757610dd5565b6001600060028381548110610bdf5760e060020a634e487b7102600052603260045260246000fd5b6000918252602080832090910154600160a060020a0316835282019290925260400190206002015460ff1615610dd5576001600060028381548110610c375760e060020a634e487b7102600052603260045260246000fd5b6000918252602080832090910154600160a060020a031683528281019390935260409182019020815160608101909252805460ff16151582526001810180549293919291840191610c8790612d24565b80601f0160208091040260200160405190810160405280929190818152602001828054610cb390612d24565b8015610d005780601f10610cd557610100808354040283529160200191610d00565b820191906000526020600020905b815481529060010190602001808311610ce357829003601f168201915b50505091835250506002919091015460ff1615156020909101528451859084908110610d3f5760e060020a634e487b7102600052603260045260246000fd5b602002602001018190525060028181548110610d6e5760e060020a634e487b7102600052603260045260246000fd5b9060005260206000200160009054906101000a9004600160a060020a0316838381518110610daf5760e060020a634e487b7102600052603260045260246000fd5b600160a060020a039092166020928302919091019091015281610dd181612d62565b9250505b80610ddf81612d62565b915050610b5e565b50909350909150509091565b600160a060020a031660009081526001602052604090205460ff1690565b3360009081526001602052604090205460609060ff1680610e4a5750610e3561028d565b600160a060020a031633600160a060020a0316145b610e695760405160e560020a62461bcd0281526004016102f490612b56565b600484604051610e7991906126e9565b9081526040519081900360200190206003015460ff16610eae5760405160e560020a62461bcd0281526004016102f490612b1f565b6000825167ffffffffffffffff811115610edb5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015610f04578160200160208202803683370190505b50905060005b835181101561107b576000600887604051610f2591906126e9565b90815260200160405180910390206000868481518110610f585760e060020a634e487b7102600052603260045260246000fd5b60209081029190910181015182528101919091526040016000205463ffffffff161115610fb9576000828281518110610fa45760e060020a634e487b7102600052603260045260246000fd5b91151560209283029190910190910152611069565b6001828281518110610fde5760e060020a634e487b7102600052603260045260246000fd5b6020026020010190151590811515815250508460088760405161100191906126e9565b908152602001604051809103902060008684815181106110345760e060020a634e487b7102600052603260045260246000fd5b6020026020010151815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8061107381612d62565b915050610f0a565b50949350505050565b600054600160a060020a031633146110b15760405160e560020a62461bcd0281526004016102f490612a54565b600160a060020a03821660009081526001602052604090206002015460ff166110ef5760405160e560020a62461bcd0281526004016102f490612b8d565b600160a060020a03919091166000908152600160205260409020805460ff1916911515919091179055565b3360009081526001602052604090205460609060ff1680611153575061113e61028d565b600160a060020a031633600160a060020a0316145b6111725760405160e560020a62461bcd0281526004016102f490612b56565b60068460405161118291906126e9565b9081526040519081900360200190206003015460ff610100909104166111bd5760405160e560020a62461bcd0281526004016102f490612b1f565b81518351146111e15760405160e560020a62461bcd0281526004016102f490612bea565b6000835167ffffffffffffffff81111561120e5760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015611237578160200160208202803683370190505b50905060005b845181101561107b578381815181106112695760e060020a634e487b7102600052603260045260246000fd5b602002602001015160098760405161128191906126e9565b90815260200160405180910390208683815181106112b25760e060020a634e487b7102600052603260045260246000fd5b60200260200101516040516112c791906126e9565b908152602001604051809103902054141561137d57600a866040516112ec91906126e9565b908152602001604051809103902085828151811061131d5760e060020a634e487b7102600052603260045260246000fd5b602002602001015160405161133291906126e9565b90815260405190819003602001902054825163ffffffff909116908390839081106113705760e060020a634e487b7102600052603260045260246000fd5b6020026020010181815250505b8061138781612d62565b91505061123d565b60055460609060009067ffffffffffffffff8111156113c15760e060020a634e487b7102600052604160045260246000fd5b6040519080825280602002602001820160405280156113fa57816020015b6113e7612146565b8152602001906001900390816113df5790505b50905060005b60055481101561166a576004600582815481106114305760e060020a634e487b7102600052603260045260246000fd5b906000526020600020016040516114479190612705565b908152602001604051809103902060405180608001604052908160008201805461147090612d24565b80601f016020809104026020016040519081016040528092919081815260200182805461149c90612d24565b80156114e95780601f106114be576101008083540402835291602001916114e9565b820191906000526020600020905b8154815290600101906020018083116114cc57829003601f168201915b5050505050815260200160018201805461150290612d24565b80601f016020809104026020016040519081016040528092919081815260200182805461152e90612d24565b801561157b5780601f106115505761010080835404028352916020019161157b565b820191906000526020600020905b81548152906001019060200180831161155e57829003601f168201915b5050505050815260200160028201805461159490612d24565b80601f01602080910402602001604051908101604052809291908181526020018280546115c090612d24565b801561160d5780601f106115e25761010080835404028352916020019161160d565b820191906000526020600020905b8154815290600101906020018083116115f057829003601f168201915b50505091835250506003919091015460ff161515602090910152825183908390811061164c5760e060020a634e487b7102600052603260045260246000fd5b6020026020010181905250808061166290612d62565b915050611400565b50905090565b3360009081526001602052604090205460609060ff16806116a9575061169461028d565b600160a060020a031633600160a060020a0316145b6116c85760405160e560020a62461bcd0281526004016102f490612b56565b6006856040516116d891906126e9565b9081526040519081900360200190206003015460ff610100909104166117135760405160e560020a62461bcd0281526004016102f490612b1f565b81518351146117375760405160e560020a62461bcd0281526004016102f490612bea565b6000835167ffffffffffffffff8111156117645760e060020a634e487b7102600052604160045260246000fd5b60405190808252806020026020018201604052801561178d578160200160208202803683370190505b50905060005b8451811015611b1a576006876040516117ac91906126e9565b9081526040519081900360200190206003015460ff16156119165760018282815181106117ec5760e060020a634e487b7102600052603260045260246000fd5b6020026020010190151590811515815250508381815181106118215760e060020a634e487b7102600052603260045260246000fd5b602002602001015160098860405161183991906126e9565b908152602001604051809103902086838151811061186a5760e060020a634e487b7102600052603260045260246000fd5b602002602001015160405161187f91906126e9565b90815260200160405180910390208190555085600a886040516118a291906126e9565b90815260200160405180910390208683815181106118d35760e060020a634e487b7102600052603260045260246000fd5b60200260200101516040516118e891906126e9565b908152604051908190036020019020805463ffffffff9290921663ffffffff19909216919091179055611b08565b600060098860405161192891906126e9565b90815260200160405180910390208683815181106119595760e060020a634e487b7102600052603260045260246000fd5b602002602001015160405161196e91906126e9565b90815260200160405180910390205411156119bd5760008282815181106119a85760e060020a634e487b7102600052603260045260246000fd5b91151560209283029190910190910152611b08565b60018282815181106119e25760e060020a634e487b7102600052603260045260246000fd5b602002602001019015159081151581525050838181518110611a175760e060020a634e487b7102600052603260045260246000fd5b6020026020010151600988604051611a2f91906126e9565b9081526020016040518091039020868381518110611a605760e060020a634e487b7102600052603260045260246000fd5b6020026020010151604051611a7591906126e9565b90815260200160405180910390208190555085600a88604051611a9891906126e9565b9081526020016040518091039020868381518110611ac95760e060020a634e487b7102600052603260045260246000fd5b6020026020010151604051611ade91906126e9565b908152604051908190036020019020805463ffffffff9290921663ffffffff199092169190911790555b80611b1281612d62565b915050611793565b5095945050505050565b60075460609060009067ffffffffffffffff811115611b565760e060020a634e487b7102600052604160045260246000fd5b604051908082528060200260200182016040528015611b8f57816020015b611b7c612170565b815260200190600190039081611b745790505b50905060005b60075481101561166a57600660078281548110611bc55760e060020a634e487b7102600052603260045260246000fd5b90600052602060002001604051611bdc9190612705565b90815260200160405180910390206040518060a0016040529081600082018054611c0590612d24565b80601f0160208091040260200160405190810160405280929190818152602001828054611c3190612d24565b8015611c7e5780601f10611c5357610100808354040283529160200191611c7e565b820191906000526020600020905b815481529060010190602001808311611c6157829003601f168201915b50505050508152602001600182018054611c9790612d24565b80601f0160208091040260200160405190810160405280929190818152602001828054611cc390612d24565b8015611d105780601f10611ce557610100808354040283529160200191611d10565b820191906000526020600020905b815481529060010190602001808311611cf357829003601f168201915b50505050508152602001600282018054611d2990612d24565b80601f0160208091040260200160405190810160405280929190818152602001828054611d5590612d24565b8015611da25780601f10611d7757610100808354040283529160200191611da2565b820191906000526020600020905b815481529060010190602001808311611d8557829003601f168201915b50505091835250506003919091015460ff808216151560208401526101009091041615156040909101528251839083908110611df15760e060020a634e487b7102600052603260045260246000fd5b60200260200101819052508080611e0790612d62565b915050611b95565b3360009081526001602052604090205460ff1680611e455750611e3061028d565b600160a060020a031633600160a060020a0316145b611e645760405160e560020a62461bcd0281526004016102f490612b56565b600684604051611e7491906126e9565b9081526040519081900360200190206003015460ff6101009091041615611eb05760405160e560020a62461bcd0281526004016102f490612c47565b6040518060a00160405280858152602001848152602001838152602001821515815260200160011515815250600685604051611eec91906126e9565b90815260200160405180910390206000820151816000019080519060200190611f1692919061209d565b506020828101518051611f2f926001850192019061209d565b5060408201518051611f4b91600284019160209091019061209d565b5060608201516003909101805460809093015115156101000261ff001992151560ff199094169390931791909116919091179055600780546001810182556000919091528451611fc2917fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190602087019061209d565b5050505050565b600054600160a060020a03163314611ff65760405160e560020a62461bcd0281526004016102f490612a54565b60008054604051600160a060020a03808516939216917f342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a73591a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b50805461206a90612d24565b6000825580601f1061207c575061209a565b601f01602090049060005260206000209081019061209a91906121a3565b50565b8280546120a990612d24565b90600052602060002090601f0160209004810192826120cb5760008555612111565b82601f106120e457805160ff1916838001178555612111565b82800160010185558215612111579182015b828111156121115782518255916020019190600101906120f6565b5061211d9291506121a3565b5090565b6040518060600160405280600015158152602001606081526020016000151581525090565b60405180608001604052806060815260200160608152602001606081526020016000151581525090565b6040518060a001604052806060815260200160608152602001606081526020016000151581526020016000151581525090565b5b8082111561211d57600081556001016121a4565b8035600160a060020a038116811461091357600080fd5b600082601f8301126121df578081fd5b813560206121f46121ef83612ca8565b612c7e565b82815281810190858301855b8581101561222957612217898684358b01016122a0565b84529284019290840190600101612200565b5090979650505050505050565b600082601f830112612246578081fd5b813560206122566121ef83612ca8565b8281528181019085830183850287018401881015612272578586fd5b855b8581101561222957813584529284019290840190600101612274565b8035801515811461091357600080fd5b600082601f8301126122b0578081fd5b813567ffffffffffffffff8111156122ca576122ca612dba565b6122dd601f8201601f1916602001612c7e565b8181528460208386010111156122f1578283fd5b816020850160208301379081016020019190915292915050565b803563ffffffff8116811461091357600080fd5b600060208284031215612330578081fd5b612339826121b8565b9392505050565b60008060408385031215612352578081fd5b61235b836121b8565b915061236960208401612290565b90509250929050565b60008060408385031215612384578182fd5b61238d836121b8565b9150602083013567ffffffffffffffff8111156123a8578182fd5b6123b4858286016122a0565b9150509250929050565b6000602082840312156123cf578081fd5b813567ffffffffffffffff8111156123e5578182fd5b6123f1848285016122a0565b949350505050565b60008060006060848603121561240d578081fd5b833567ffffffffffffffff80821115612424578283fd5b612430878388016122a0565b94506020860135915080821115612445578283fd5b612451878388016121cf565b93506040860135915080821115612466578283fd5b5061247386828701612236565b9150509250925092565b6000806040838503121561248f578182fd5b823567ffffffffffffffff808211156124a6578384fd5b6124b2868387016122a0565b935060208501359150808211156124c7578283fd5b506123b485828601612236565b6000806000606084860312156124e8578283fd5b833567ffffffffffffffff808211156124ff578485fd5b61250b878388016122a0565b94506020860135915080821115612520578384fd5b61252c878388016122a0565b93506040860135915080821115612541578283fd5b50612473868287016122a0565b60008060008060808587031215612563578081fd5b843567ffffffffffffffff8082111561257a578283fd5b612586888389016122a0565b9550602087013591508082111561259b578283fd5b6125a7888389016122a0565b945060408701359150808211156125bc578283fd5b506125c9878288016122a0565b9250506125d860608601612290565b905092959194509250565b600080600080608085870312156125f8578384fd5b843567ffffffffffffffff8082111561260f578586fd5b61261b888389016122a0565b95506126296020880161230b565b9450604087013591508082111561263e578384fd5b61264a888389016121cf565b9350606087013591508082111561265f578283fd5b5061266c87828801612236565b91505092959194509250565b60008060006060848603121561268c578283fd5b833567ffffffffffffffff808211156126a3578485fd5b6126af878388016122a0565b94506124516020870161230b565b600081518084526126d5816020860160208601612cd8565b601f01601f19169290920160200192915050565b600082516126fb818460208701612cd8565b9190910192915050565b815460009081906002810460018083168061272157607f831692505b60208084108214156127445760e060020a634e487b710287526022600452602487fd5b818015612758576001811461276957612795565b60ff19861689528489019650612795565b6127728a612ccc565b885b8681101561278d5781548b820152908501908301612774565b505084890196505b509498975050505050505050565b600160a060020a0391909116815260200190565b6040808252835182820181905260009190606090818501906020808901865b838110156127fb578151600160a060020a0316855293820193908201906001016127d6565b5050868303818801528751808452818401925080820284018201898301885b8381101561286757601f1987840301865281518051151584528581015189878601526128488a8601826126bd565b918b01511515948b01949094529585019592509084019060010161281a565b50909b9a5050505050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156128b2578351151583529284019291840191600101612894565b50909695505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561295b57603f19898403018552815160808151818652612908828701826126bd565b915050888201518582038a87015261292082826126bd565b915050878201518582038987015261293882826126bd565b6060938401511515969093019590955250948701949250908601906001016128e2565b509098975050505050505050565b60208082528251828201819052600091906040908185019080840286018301878501865b8381101561295b57603f19898403018552815160a081518186526129b3828701826126bd565b915050888201518582038a8701526129cb82826126bd565b91505087820151858203898701526129e382826126bd565b606084810151151590880152608093840151151593909601929092525050938601939086019060010161298d565b6020808252825182820181905260009190848201906040850190845b818110156128b257835183529284019291840191600101612a2d565b901515815260200190565b60208082526013908201527f43616c6c6572206973206e6f74206f776e657200000000000000000000000000604082015260600190565b60208082526024908201527f63616e6e6f74206368616e676520696e666f206f662061646d696e20696e207560408201527f73696e6700000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601c908201527f63616e6e6f742064656c6574652061646d696e206e6f74207573656400000000604082015260600190565b60208082526012908201527f746f706963206973206e6f742065786973740000000000000000000000000000604082015260600190565b60208082526013908201527f43616c6c6572206973206e6f742061646d696e00000000000000000000000000604082015260600190565b60208082526022908201527f63616e6e6f74206368616e676520696e666f206f6620756e6b6f776e2061646d60408201527f696e000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f746865206c656e67746873206f66207468652074776f2061726520646966666560408201527f72656e7400000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f746f70696320697320616c726561647920657869737400000000000000000000604082015260600190565b60405181810167ffffffffffffffff81118282101715612ca057612ca0612dba565b604052919050565b600067ffffffffffffffff821115612cc257612cc2612dba565b5060209081020190565b60009081526020902090565b60005b83811015612cf3578181015183820152602001612cdb565b838111156107835750506000910152565b600063ffffffff821680612d1a57612d1a612da1565b6000190192915050565b600281046001821680612d3857607f821691505b60208210811415612d5c5760e060020a634e487b7102600052602260045260246000fd5b50919050565b6000600019821415612d7657612d76612da1565b5060010190565b600063ffffffff80831681811415612d9757612d97612da1565b6001019392505050565b60e060020a634e487b7102600052601160045260246000fd5b60e060020a634e487b7102600052604160045260246000fdfea2646970667358221220df54b4dee47a483eaf280ea3ad041f7dc80d7b0f23c8eab5295970d5eda50a0d64736f6c63430008000033",
}

// DataFinABI is the input ABI used to generate the binding from.
// Deprecated: Use DataFinMetaData.ABI instead.
var DataFinABI = DataFinMetaData.ABI

// DataFinBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use DataFinMetaData.Bin instead.
var DataFinBin = DataFinMetaData.Bin

// DeployDataFin deploys a new Ethereum contract, binding an instance of DataFin to it.
func DeployDataFin(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *DataFin, error) {
	parsed, err := DataFinMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(DataFinBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &DataFin{DataFinCaller: DataFinCaller{contract: contract}, DataFinTransactor: DataFinTransactor{contract: contract}, DataFinFilterer: DataFinFilterer{contract: contract}}, nil
}

// DataFin is an auto generated Go binding around an Ethereum contract.
type DataFin struct {
	DataFinCaller     // Read-only binding to the contract
	DataFinTransactor // Write-only binding to the contract
	DataFinFilterer   // Log filterer for contract events
}

// DataFinCaller is an auto generated read-only Go binding around an Ethereum contract.
type DataFinCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DataFinTransactor is an auto generated write-only Go binding around an Ethereum contract.
type DataFinTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DataFinFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type DataFinFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// DataFinSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type DataFinSession struct {
	Contract     *DataFin          // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// DataFinCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type DataFinCallerSession struct {
	Contract *DataFinCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts  // Call options to use throughout this session
}

// DataFinTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type DataFinTransactorSession struct {
	Contract     *DataFinTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts  // Transaction auth options to use throughout this session
}

// DataFinRaw is an auto generated low-level Go binding around an Ethereum contract.
type DataFinRaw struct {
	Contract *DataFin // Generic contract binding to access the raw methods on
}

// DataFinCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type DataFinCallerRaw struct {
	Contract *DataFinCaller // Generic read-only contract binding to access the raw methods on
}

// DataFinTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type DataFinTransactorRaw struct {
	Contract *DataFinTransactor // Generic write-only contract binding to access the raw methods on
}

// NewDataFin creates a new instance of DataFin, bound to a specific deployed contract.
func NewDataFin(address common.Address, backend bind.ContractBackend) (*DataFin, error) {
	contract, err := bindDataFin(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &DataFin{DataFinCaller: DataFinCaller{contract: contract}, DataFinTransactor: DataFinTransactor{contract: contract}, DataFinFilterer: DataFinFilterer{contract: contract}}, nil
}

// NewDataFinCaller creates a new read-only instance of DataFin, bound to a specific deployed contract.
func NewDataFinCaller(address common.Address, caller bind.ContractCaller) (*DataFinCaller, error) {
	contract, err := bindDataFin(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &DataFinCaller{contract: contract}, nil
}

// NewDataFinTransactor creates a new write-only instance of DataFin, bound to a specific deployed contract.
func NewDataFinTransactor(address common.Address, transactor bind.ContractTransactor) (*DataFinTransactor, error) {
	contract, err := bindDataFin(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &DataFinTransactor{contract: contract}, nil
}

// NewDataFinFilterer creates a new log filterer instance of DataFin, bound to a specific deployed contract.
func NewDataFinFilterer(address common.Address, filterer bind.ContractFilterer) (*DataFinFilterer, error) {
	contract, err := bindDataFin(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &DataFinFilterer{contract: contract}, nil
}

// bindDataFin binds a generic wrapper to an already deployed contract.
func bindDataFin(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := DataFinMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_DataFin *DataFinRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _DataFin.Contract.DataFinCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_DataFin *DataFinRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DataFin.Contract.DataFinTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_DataFin *DataFinRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _DataFin.Contract.DataFinTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_DataFin *DataFinCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _DataFin.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_DataFin *DataFinTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _DataFin.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_DataFin *DataFinTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _DataFin.Contract.contract.Transact(opts, method, params...)
}

// GetAdminInfos is a free data retrieval call binding the contract method 0x39f19d71.
//
// Solidity: function GetAdminInfos() view returns(address[], (bool,string,bool)[])
func (_DataFin *DataFinCaller) GetAdminInfos(opts *bind.CallOpts) ([]common.Address, []AdminAdminInfo, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetAdminInfos")

	if err != nil {
		return *new([]common.Address), *new([]AdminAdminInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	out1 := *abi.ConvertType(out[1], new([]AdminAdminInfo)).(*[]AdminAdminInfo)

	return out0, out1, err

}

// GetAdminInfos is a free data retrieval call binding the contract method 0x39f19d71.
//
// Solidity: function GetAdminInfos() view returns(address[], (bool,string,bool)[])
func (_DataFin *DataFinSession) GetAdminInfos() ([]common.Address, []AdminAdminInfo, error) {
	return _DataFin.Contract.GetAdminInfos(&_DataFin.CallOpts)
}

// GetAdminInfos is a free data retrieval call binding the contract method 0x39f19d71.
//
// Solidity: function GetAdminInfos() view returns(address[], (bool,string,bool)[])
func (_DataFin *DataFinCallerSession) GetAdminInfos() ([]common.Address, []AdminAdminInfo, error) {
	return _DataFin.Contract.GetAdminInfos(&_DataFin.CallOpts)
}

// GetIDTopics is a free data retrieval call binding the contract method 0x93d721ca.
//
// Solidity: function GetIDTopics() view returns((string,string,string,bool,bool)[])
func (_DataFin *DataFinCaller) GetIDTopics(opts *bind.CallOpts) ([]DataFinIDFinInfo, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetIDTopics")

	if err != nil {
		return *new([]DataFinIDFinInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]DataFinIDFinInfo)).(*[]DataFinIDFinInfo)

	return out0, err

}

// GetIDTopics is a free data retrieval call binding the contract method 0x93d721ca.
//
// Solidity: function GetIDTopics() view returns((string,string,string,bool,bool)[])
func (_DataFin *DataFinSession) GetIDTopics() ([]DataFinIDFinInfo, error) {
	return _DataFin.Contract.GetIDTopics(&_DataFin.CallOpts)
}

// GetIDTopics is a free data retrieval call binding the contract method 0x93d721ca.
//
// Solidity: function GetIDTopics() view returns((string,string,string,bool,bool)[])
func (_DataFin *DataFinCallerSession) GetIDTopics() ([]DataFinIDFinInfo, error) {
	return _DataFin.Contract.GetIDTopics(&_DataFin.CallOpts)
}

// GetOwner is a free data retrieval call binding the contract method 0x0ae50a39.
//
// Solidity: function GetOwner() view returns(address)
func (_DataFin *DataFinCaller) GetOwner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetOwner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetOwner is a free data retrieval call binding the contract method 0x0ae50a39.
//
// Solidity: function GetOwner() view returns(address)
func (_DataFin *DataFinSession) GetOwner() (common.Address, error) {
	return _DataFin.Contract.GetOwner(&_DataFin.CallOpts)
}

// GetOwner is a free data retrieval call binding the contract method 0x0ae50a39.
//
// Solidity: function GetOwner() view returns(address)
func (_DataFin *DataFinCallerSession) GetOwner() (common.Address, error) {
	return _DataFin.Contract.GetOwner(&_DataFin.CallOpts)
}

// GetTopics is a free data retrieval call binding the contract method 0x5f0ffbff.
//
// Solidity: function GetTopics() view returns((string,string,string,bool)[])
func (_DataFin *DataFinCaller) GetTopics(opts *bind.CallOpts) ([]DataFinFinInfo, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "GetTopics")

	if err != nil {
		return *new([]DataFinFinInfo), err
	}

	out0 := *abi.ConvertType(out[0], new([]DataFinFinInfo)).(*[]DataFinFinInfo)

	return out0, err

}

// GetTopics is a free data retrieval call binding the contract method 0x5f0ffbff.
//
// Solidity: function GetTopics() view returns((string,string,string,bool)[])
func (_DataFin *DataFinSession) GetTopics() ([]DataFinFinInfo, error) {
	return _DataFin.Contract.GetTopics(&_DataFin.CallOpts)
}

// GetTopics is a free data retrieval call binding the contract method 0x5f0ffbff.
//
// Solidity: function GetTopics() view returns((string,string,string,bool)[])
func (_DataFin *DataFinCallerSession) GetTopics() ([]DataFinFinInfo, error) {
	return _DataFin.Contract.GetTopics(&_DataFin.CallOpts)
}

// IsAdminEnable is a free data retrieval call binding the contract method 0x43672d61.
//
// Solidity: function IsAdminEnable(address admin) view returns(bool)
func (_DataFin *DataFinCaller) IsAdminEnable(opts *bind.CallOpts, admin common.Address) (bool, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "IsAdminEnable", admin)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAdminEnable is a free data retrieval call binding the contract method 0x43672d61.
//
// Solidity: function IsAdminEnable(address admin) view returns(bool)
func (_DataFin *DataFinSession) IsAdminEnable(admin common.Address) (bool, error) {
	return _DataFin.Contract.IsAdminEnable(&_DataFin.CallOpts, admin)
}

// IsAdminEnable is a free data retrieval call binding the contract method 0x43672d61.
//
// Solidity: function IsAdminEnable(address admin) view returns(bool)
func (_DataFin *DataFinCallerSession) IsAdminEnable(admin common.Address) (bool, error) {
	return _DataFin.Contract.IsAdminEnable(&_DataFin.CallOpts, admin)
}

// VerifyIDItems is a free data retrieval call binding the contract method 0x4fd0ee45.
//
// Solidity: function VerifyIDItems(string topicID, string[] ids, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinCaller) VerifyIDItems(opts *bind.CallOpts, topicID string, ids []string, vals []*big.Int) ([]*big.Int, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "VerifyIDItems", topicID, ids, vals)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// VerifyIDItems is a free data retrieval call binding the contract method 0x4fd0ee45.
//
// Solidity: function VerifyIDItems(string topicID, string[] ids, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinSession) VerifyIDItems(topicID string, ids []string, vals []*big.Int) ([]*big.Int, error) {
	return _DataFin.Contract.VerifyIDItems(&_DataFin.CallOpts, topicID, ids, vals)
}

// VerifyIDItems is a free data retrieval call binding the contract method 0x4fd0ee45.
//
// Solidity: function VerifyIDItems(string topicID, string[] ids, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinCallerSession) VerifyIDItems(topicID string, ids []string, vals []*big.Int) ([]*big.Int, error) {
	return _DataFin.Contract.VerifyIDItems(&_DataFin.CallOpts, topicID, ids, vals)
}

// VerifyItems is a free data retrieval call binding the contract method 0x1329be2e.
//
// Solidity: function VerifyItems(string topicID, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinCaller) VerifyItems(opts *bind.CallOpts, topicID string, vals []*big.Int) ([]*big.Int, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "VerifyItems", topicID, vals)

	if err != nil {
		return *new([]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([]*big.Int)).(*[]*big.Int)

	return out0, err

}

// VerifyItems is a free data retrieval call binding the contract method 0x1329be2e.
//
// Solidity: function VerifyItems(string topicID, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinSession) VerifyItems(topicID string, vals []*big.Int) ([]*big.Int, error) {
	return _DataFin.Contract.VerifyItems(&_DataFin.CallOpts, topicID, vals)
}

// VerifyItems is a free data retrieval call binding the contract method 0x1329be2e.
//
// Solidity: function VerifyItems(string topicID, uint256[] vals) view returns(uint256[])
func (_DataFin *DataFinCallerSession) VerifyItems(topicID string, vals []*big.Int) ([]*big.Int, error) {
	return _DataFin.Contract.VerifyItems(&_DataFin.CallOpts, topicID, vals)
}

// Version is a free data retrieval call binding the contract method 0x2d8e3250.
//
// Solidity: function Version(string _version) view returns(bool ret)
func (_DataFin *DataFinCaller) Version(opts *bind.CallOpts, _version string) (bool, error) {
	var out []interface{}
	err := _DataFin.contract.Call(opts, &out, "Version", _version)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Version is a free data retrieval call binding the contract method 0x2d8e3250.
//
// Solidity: function Version(string _version) view returns(bool ret)
func (_DataFin *DataFinSession) Version(_version string) (bool, error) {
	return _DataFin.Contract.Version(&_DataFin.CallOpts, _version)
}

// Version is a free data retrieval call binding the contract method 0x2d8e3250.
//
// Solidity: function Version(string _version) view returns(bool ret)
func (_DataFin *DataFinCallerSession) Version(_version string) (bool, error) {
	return _DataFin.Contract.Version(&_DataFin.CallOpts, _version)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x3561247d.
//
// Solidity: function AddAdmin(address admin, string info) returns()
func (_DataFin *DataFinTransactor) AddAdmin(opts *bind.TransactOpts, admin common.Address, info string) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "AddAdmin", admin, info)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x3561247d.
//
// Solidity: function AddAdmin(address admin, string info) returns()
func (_DataFin *DataFinSession) AddAdmin(admin common.Address, info string) (*types.Transaction, error) {
	return _DataFin.Contract.AddAdmin(&_DataFin.TransactOpts, admin, info)
}

// AddAdmin is a paid mutator transaction binding the contract method 0x3561247d.
//
// Solidity: function AddAdmin(address admin, string info) returns()
func (_DataFin *DataFinTransactorSession) AddAdmin(admin common.Address, info string) (*types.Transaction, error) {
	return _DataFin.Contract.AddAdmin(&_DataFin.TransactOpts, admin, info)
}

// AddIDsItems is a paid mutator transaction binding the contract method 0x6ffc46c3.
//
// Solidity: function AddIDsItems(string topicID, uint32 timestamp, string[] ids, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactor) AddIDsItems(opts *bind.TransactOpts, topicID string, timestamp uint32, ids []string, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "AddIDsItems", topicID, timestamp, ids, vals)
}

// AddIDsItems is a paid mutator transaction binding the contract method 0x6ffc46c3.
//
// Solidity: function AddIDsItems(string topicID, uint32 timestamp, string[] ids, uint256[] vals) returns(bool[])
func (_DataFin *DataFinSession) AddIDsItems(topicID string, timestamp uint32, ids []string, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddIDsItems(&_DataFin.TransactOpts, topicID, timestamp, ids, vals)
}

// AddIDsItems is a paid mutator transaction binding the contract method 0x6ffc46c3.
//
// Solidity: function AddIDsItems(string topicID, uint32 timestamp, string[] ids, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactorSession) AddIDsItems(topicID string, timestamp uint32, ids []string, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddIDsItems(&_DataFin.TransactOpts, topicID, timestamp, ids, vals)
}

// AddItems is a paid mutator transaction binding the contract method 0x4d739783.
//
// Solidity: function AddItems(string topicID, uint32 timestamp, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactor) AddItems(opts *bind.TransactOpts, topicID string, timestamp uint32, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "AddItems", topicID, timestamp, vals)
}

// AddItems is a paid mutator transaction binding the contract method 0x4d739783.
//
// Solidity: function AddItems(string topicID, uint32 timestamp, uint256[] vals) returns(bool[])
func (_DataFin *DataFinSession) AddItems(topicID string, timestamp uint32, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddItems(&_DataFin.TransactOpts, topicID, timestamp, vals)
}

// AddItems is a paid mutator transaction binding the contract method 0x4d739783.
//
// Solidity: function AddItems(string topicID, uint32 timestamp, uint256[] vals) returns(bool[])
func (_DataFin *DataFinTransactorSession) AddItems(topicID string, timestamp uint32, vals []*big.Int) (*types.Transaction, error) {
	return _DataFin.Contract.AddItems(&_DataFin.TransactOpts, topicID, timestamp, vals)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xf2853292.
//
// Solidity: function ChangeOwner(address newOwner) returns()
func (_DataFin *DataFinTransactor) ChangeOwner(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "ChangeOwner", newOwner)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xf2853292.
//
// Solidity: function ChangeOwner(address newOwner) returns()
func (_DataFin *DataFinSession) ChangeOwner(newOwner common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.ChangeOwner(&_DataFin.TransactOpts, newOwner)
}

// ChangeOwner is a paid mutator transaction binding the contract method 0xf2853292.
//
// Solidity: function ChangeOwner(address newOwner) returns()
func (_DataFin *DataFinTransactorSession) ChangeOwner(newOwner common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.ChangeOwner(&_DataFin.TransactOpts, newOwner)
}

// CreateIDTopic is a paid mutator transaction binding the contract method 0xd3ef0d24.
//
// Solidity: function CreateIDTopic(string topicID, string name, string info, bool changeAble) returns()
func (_DataFin *DataFinTransactor) CreateIDTopic(opts *bind.TransactOpts, topicID string, name string, info string, changeAble bool) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "CreateIDTopic", topicID, name, info, changeAble)
}

// CreateIDTopic is a paid mutator transaction binding the contract method 0xd3ef0d24.
//
// Solidity: function CreateIDTopic(string topicID, string name, string info, bool changeAble) returns()
func (_DataFin *DataFinSession) CreateIDTopic(topicID string, name string, info string, changeAble bool) (*types.Transaction, error) {
	return _DataFin.Contract.CreateIDTopic(&_DataFin.TransactOpts, topicID, name, info, changeAble)
}

// CreateIDTopic is a paid mutator transaction binding the contract method 0xd3ef0d24.
//
// Solidity: function CreateIDTopic(string topicID, string name, string info, bool changeAble) returns()
func (_DataFin *DataFinTransactorSession) CreateIDTopic(topicID string, name string, info string, changeAble bool) (*types.Transaction, error) {
	return _DataFin.Contract.CreateIDTopic(&_DataFin.TransactOpts, topicID, name, info, changeAble)
}

// CreateTopic is a paid mutator transaction binding the contract method 0x1f2c3df6.
//
// Solidity: function CreateTopic(string topicID, string name, string info) returns()
func (_DataFin *DataFinTransactor) CreateTopic(opts *bind.TransactOpts, topicID string, name string, info string) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "CreateTopic", topicID, name, info)
}

// CreateTopic is a paid mutator transaction binding the contract method 0x1f2c3df6.
//
// Solidity: function CreateTopic(string topicID, string name, string info) returns()
func (_DataFin *DataFinSession) CreateTopic(topicID string, name string, info string) (*types.Transaction, error) {
	return _DataFin.Contract.CreateTopic(&_DataFin.TransactOpts, topicID, name, info)
}

// CreateTopic is a paid mutator transaction binding the contract method 0x1f2c3df6.
//
// Solidity: function CreateTopic(string topicID, string name, string info) returns()
func (_DataFin *DataFinTransactorSession) CreateTopic(topicID string, name string, info string) (*types.Transaction, error) {
	return _DataFin.Contract.CreateTopic(&_DataFin.TransactOpts, topicID, name, info)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x1af6bd3d.
//
// Solidity: function DeleteAdmin(address admin) returns()
func (_DataFin *DataFinTransactor) DeleteAdmin(opts *bind.TransactOpts, admin common.Address) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "DeleteAdmin", admin)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x1af6bd3d.
//
// Solidity: function DeleteAdmin(address admin) returns()
func (_DataFin *DataFinSession) DeleteAdmin(admin common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.DeleteAdmin(&_DataFin.TransactOpts, admin)
}

// DeleteAdmin is a paid mutator transaction binding the contract method 0x1af6bd3d.
//
// Solidity: function DeleteAdmin(address admin) returns()
func (_DataFin *DataFinTransactorSession) DeleteAdmin(admin common.Address) (*types.Transaction, error) {
	return _DataFin.Contract.DeleteAdmin(&_DataFin.TransactOpts, admin)
}

// SetEnableAdmin is a paid mutator transaction binding the contract method 0x4e553263.
//
// Solidity: function SetEnableAdmin(address admin, bool enable) returns()
func (_DataFin *DataFinTransactor) SetEnableAdmin(opts *bind.TransactOpts, admin common.Address, enable bool) (*types.Transaction, error) {
	return _DataFin.contract.Transact(opts, "SetEnableAdmin", admin, enable)
}

// SetEnableAdmin is a paid mutator transaction binding the contract method 0x4e553263.
//
// Solidity: function SetEnableAdmin(address admin, bool enable) returns()
func (_DataFin *DataFinSession) SetEnableAdmin(admin common.Address, enable bool) (*types.Transaction, error) {
	return _DataFin.Contract.SetEnableAdmin(&_DataFin.TransactOpts, admin, enable)
}

// SetEnableAdmin is a paid mutator transaction binding the contract method 0x4e553263.
//
// Solidity: function SetEnableAdmin(address admin, bool enable) returns()
func (_DataFin *DataFinTransactorSession) SetEnableAdmin(admin common.Address, enable bool) (*types.Transaction, error) {
	return _DataFin.Contract.SetEnableAdmin(&_DataFin.TransactOpts, admin, enable)
}

// DataFinDataFinCreateIterator is returned from FilterDataFinCreate and is used to iterate over the raw logs and unpacked data for DataFinCreate events raised by the DataFin contract.
type DataFinDataFinCreateIterator struct {
	Event *DataFinDataFinCreate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DataFinDataFinCreateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DataFinDataFinCreate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DataFinDataFinCreate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DataFinDataFinCreateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DataFinDataFinCreateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DataFinDataFinCreate represents a DataFinCreate event raised by the DataFin contract.
type DataFinDataFinCreate struct {
	Cteator common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterDataFinCreate is a free log retrieval operation binding the contract event 0x7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a1.
//
// Solidity: event DataFinCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) FilterDataFinCreate(opts *bind.FilterOpts, cteator []common.Address) (*DataFinDataFinCreateIterator, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.FilterLogs(opts, "DataFinCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return &DataFinDataFinCreateIterator{contract: _DataFin.contract, event: "DataFinCreate", logs: logs, sub: sub}, nil
}

// WatchDataFinCreate is a free log subscription operation binding the contract event 0x7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a1.
//
// Solidity: event DataFinCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) WatchDataFinCreate(opts *bind.WatchOpts, sink chan<- *DataFinDataFinCreate, cteator []common.Address) (event.Subscription, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.WatchLogs(opts, "DataFinCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DataFinDataFinCreate)
				if err := _DataFin.contract.UnpackLog(event, "DataFinCreate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDataFinCreate is a log parse operation binding the contract event 0x7ed303bb4c48f8a88e3e611e556d81eb3d1465e9ccaf74c2e34e23287cf727a1.
//
// Solidity: event DataFinCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) ParseDataFinCreate(log types.Log) (*DataFinDataFinCreate, error) {
	event := new(DataFinDataFinCreate)
	if err := _DataFin.contract.UnpackLog(event, "DataFinCreate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// DataFinOwnerSetIterator is returned from FilterOwnerSet and is used to iterate over the raw logs and unpacked data for OwnerSet events raised by the DataFin contract.
type DataFinOwnerSetIterator struct {
	Event *DataFinOwnerSet // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DataFinOwnerSetIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DataFinOwnerSet)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DataFinOwnerSet)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DataFinOwnerSetIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DataFinOwnerSetIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DataFinOwnerSet represents a OwnerSet event raised by the DataFin contract.
type DataFinOwnerSet struct {
	OldOwner common.Address
	NewOwner common.Address
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterOwnerSet is a free log retrieval operation binding the contract event 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735.
//
// Solidity: event OwnerSet(address indexed oldOwner, address indexed newOwner)
func (_DataFin *DataFinFilterer) FilterOwnerSet(opts *bind.FilterOpts, oldOwner []common.Address, newOwner []common.Address) (*DataFinOwnerSetIterator, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _DataFin.contract.FilterLogs(opts, "OwnerSet", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &DataFinOwnerSetIterator{contract: _DataFin.contract, event: "OwnerSet", logs: logs, sub: sub}, nil
}

// WatchOwnerSet is a free log subscription operation binding the contract event 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735.
//
// Solidity: event OwnerSet(address indexed oldOwner, address indexed newOwner)
func (_DataFin *DataFinFilterer) WatchOwnerSet(opts *bind.WatchOpts, sink chan<- *DataFinOwnerSet, oldOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var oldOwnerRule []interface{}
	for _, oldOwnerItem := range oldOwner {
		oldOwnerRule = append(oldOwnerRule, oldOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _DataFin.contract.WatchLogs(opts, "OwnerSet", oldOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DataFinOwnerSet)
				if err := _DataFin.contract.UnpackLog(event, "OwnerSet", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnerSet is a log parse operation binding the contract event 0x342827c97908e5e2f71151c08502a66d44b6f758e3ac2f1de95f02eb95f0a735.
//
// Solidity: event OwnerSet(address indexed oldOwner, address indexed newOwner)
func (_DataFin *DataFinFilterer) ParseOwnerSet(log types.Log) (*DataFinOwnerSet, error) {
	event := new(DataFinOwnerSet)
	if err := _DataFin.contract.UnpackLog(event, "OwnerSet", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// DataFinTopicCreateIterator is returned from FilterTopicCreate and is used to iterate over the raw logs and unpacked data for TopicCreate events raised by the DataFin contract.
type DataFinTopicCreateIterator struct {
	Event *DataFinTopicCreate // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *DataFinTopicCreateIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(DataFinTopicCreate)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(DataFinTopicCreate)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *DataFinTopicCreateIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *DataFinTopicCreateIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// DataFinTopicCreate represents a TopicCreate event raised by the DataFin contract.
type DataFinTopicCreate struct {
	Cteator common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTopicCreate is a free log retrieval operation binding the contract event 0x72105a12ab9207bcb8946651910fa8191ca61842cf424a6482bab67f111b9eb2.
//
// Solidity: event TopicCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) FilterTopicCreate(opts *bind.FilterOpts, cteator []common.Address) (*DataFinTopicCreateIterator, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.FilterLogs(opts, "TopicCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return &DataFinTopicCreateIterator{contract: _DataFin.contract, event: "TopicCreate", logs: logs, sub: sub}, nil
}

// WatchTopicCreate is a free log subscription operation binding the contract event 0x72105a12ab9207bcb8946651910fa8191ca61842cf424a6482bab67f111b9eb2.
//
// Solidity: event TopicCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) WatchTopicCreate(opts *bind.WatchOpts, sink chan<- *DataFinTopicCreate, cteator []common.Address) (event.Subscription, error) {

	var cteatorRule []interface{}
	for _, cteatorItem := range cteator {
		cteatorRule = append(cteatorRule, cteatorItem)
	}

	logs, sub, err := _DataFin.contract.WatchLogs(opts, "TopicCreate", cteatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(DataFinTopicCreate)
				if err := _DataFin.contract.UnpackLog(event, "TopicCreate", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTopicCreate is a log parse operation binding the contract event 0x72105a12ab9207bcb8946651910fa8191ca61842cf424a6482bab67f111b9eb2.
//
// Solidity: event TopicCreate(address indexed cteator)
func (_DataFin *DataFinFilterer) ParseTopicCreate(log types.Log) (*DataFinTopicCreate, error) {
	event := new(DataFinTopicCreate)
	if err := _DataFin.contract.UnpackLog(event, "TopicCreate", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}