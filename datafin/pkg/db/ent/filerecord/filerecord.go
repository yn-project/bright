// Code generated by ent, DO NOT EDIT.

package filerecord

import (
	"entgo.io/ent"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the filerecord type in the database.
	Label = "file_record"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldPackageName holds the string denoting the package_name field in the database.
	FieldPackageName = "package_name"
	// FieldFileName holds the string denoting the file_name field in the database.
	FieldFileName = "file_name"
	// FieldTopicID holds the string denoting the topic_id field in the database.
	FieldTopicID = "topic_id"
	// FieldRecordNum holds the string denoting the record_num field in the database.
	FieldRecordNum = "record_num"
	// FieldSha1Sum holds the string denoting the sha1_sum field in the database.
	FieldSha1Sum = "sha1_sum"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// Table holds the table name of the filerecord in the database.
	Table = "file_records"
)

// Columns holds all SQL columns for filerecord fields.
var Columns = []string{
	FieldID,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldDeletedAt,
	FieldPackageName,
	FieldFileName,
	FieldTopicID,
	FieldRecordNum,
	FieldSha1Sum,
	FieldState,
	FieldRemark,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "yun.tea/block/bright/datafin/pkg/db/ent/runtime"
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() uint32
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() uint32
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() uint32
	// DefaultDeletedAt holds the default value on creation for the "deleted_at" field.
	DefaultDeletedAt func() uint32
	// DefaultRecordNum holds the default value on creation for the "record_num" field.
	DefaultRecordNum uint32
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)
